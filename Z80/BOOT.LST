                                ;*** AILZ80ASM *** Z-80 Assembler, version 1.0.28.0, LST:Full:4
       0703                     KRNGC       EQU     0703H       ;キー入力バッファクリア,クリアしてからGETRGを実行することでキースキャンを実現できる
       070F                     GETRG       EQU     070FH       ;キー入力バッファからデータを取り出す A <- DATA Z=0:データあり,1:なし
       074F                     PRCRT       EQU     074FH       ;1文字表示 A<-DATA,コントロールコード動作
       0753                     CTPRN       EQU     0753H       ;1文字表示 A<-DATA,コントロール文字を表示
       07A4                     XCSR        EQU     07A4H       ;カーソル移動 9FD7H<-X座標,9FD8H<-Y座標
       0A73                     XMTON       EQU     0A73H       ;CMTのリモートスイッチON
       0A78                     XMTOFF      EQU     0A78H       ;CMTのリモートスイッチをOFF
       0A91                     XMTMD       EQU     0A91H       ;CMTのボーレートを指定 A<-00:1200,01:300
       0A9A                     XMTSY       EQU     0A9AH       ;CMTにREAD動作の開始を指示する
       0AA2                     XMTRD       EQU     0AA2H       ;CMTから1Byte読み取る B<-DATA,C<-状態
       0AB5                     XMTWR       EQU     0AB5H       ;CMTに1Byte出力 A<-DATA
       0AE0                     XMTFF       EQU     0AE0H       ;CMT関連 12bitのALL1を出力?
       103B                     STR2HEX     EQU     103BH       ;(DE)からの4文字を16進数4桁にしてHLへ,ERRORでBASICに復帰
       1079                     PR2HEX      EQU     1079H       ;Aレジスタの内容を16進数2桁で表示
       10CB                     KINPUT      EQU     10CBH       ;1文字入力(WAIT)
       280C                     NEWCMD      EQU     280CH       ;NEW処理
       3722                     PRINT       EQU     3722H       ;1文字出力
       374E                     CRLF        EQU     374EH       ;CRLF出力
       1D28                     STRPRN      EQU     1D28H       ;文字列表示 DE <- 先頭アドレス 終端は00H
       9DC7                     PROGPNT     EQU     9DC7H       ;9DC7H〜9DE5HまでPROGポインタ
                                ;                                 (PROGPNT+0:PROG番号,PROGPNT+1:BASICテキスト開始アドレス)x10個分
                                ;                                 使っていないPROGポインタの先頭にはFFhを書き込み
       9DE6                     BASICST     EQU     9DE6H       ;BASICテキスト開始番地
       9DEA                     BASICEND    EQU     9DEAH       ;BASICテキスト最終番地+1
       9E06                     NOWPROG     EQU     9E06H       ;現在PROG番号
       9E68                     TEXTEND     EQU     9E68H       ;BASICテキストエリア最終番地+1
                                
                                ;0605H〜067BH RS-232C関連
                                ;0605H
                                ;0629H
                                ;0636H
                                ;064EH
                                
       FFA0                     CPUSEL      EQU     0FFA0H
       FF00                     IOSEL       EQU     0FF00H
                                
       E000                     PPI_A       EQU     0E000H
       E001                     PPI_B       EQU     PPI_A+1
       E002                     PPI_C       EQU     PPI_A+2
       E003                     PPI_R       EQU     PPI_A+3
                                
                                ;0E000H PORTA 送信データ(下位4ビット)
                                ;0E001H PORTB 受信データ(8ビット)
                                ;
                                ;0E002H PORTC Bit
                                ;7 IN  CHK
                                ;6 IN
                                ;5 IN
                                ;4 IN 
                                ;3 OUT
                                ;2 OUT FLG
                                ;1 OUT
                                ;0 OUT
                                ;
                                ;0E003H コントロールレジスタ
                                
                                
000000 F800                             ORG     0F800H
                                ;       ORG     0E800H
                                
000000 F800 C3E4FD          10  START:  JP      ST4
000003 F803 C345FA          10  ST2:    JP      BCALL
000006 F806 C34AF9          10  ST3:    JP      INIT1
                                
                                ;*********** SMコマンド(機械語プログラムのSAVE) ******************************
       F809                     MSAVE:
000009 F809 23               6          INC     HL
00000A F80A CDD5FE          17          CALL    STFN            ;SPACE読み飛ばし
00000D F80D EB               4          EX      DE,HL
00000E F80E CD3B10          17          CALL    STR2HEX         ;セーブ開始アドレス変換
000011 F811 22D5FD          16          LD      (WRKST),HL
000014 F814 13               6          INC     DE
000015 F815 CD3B10          17          CALL    STR2HEX         ;セーブ終了アドレス変換
000018 F818 22D7FD          16          LD      (WRKNX),HL
00001B F81B 13               6          INC     DE
00001C F81C CD3B10          17          CALL    STR2HEX         ;実行開始アドレス変換
00001F F81F 2282FF          16          LD      (WRKEX),HL
000022 F822 13               6          INC     DE
000023 F823 D5              11          PUSH    DE
                                        
000024 F824 2AD5FD          16          LD      HL,(WRKST)      ;セーブ終了がセーブ開始より大きくなければエラー
000027 F827 ED5BD7FD        20          LD      DE,(WRKNX)
00002B F82B AF               4          XOR     A
00002C F82C ED52            15          SBC     HL,DE
00002E F82E E1              10          POP     HL
00002F F82F 3EE2             7          LD      A,0E2H          ;ERRMSG
000031 F831 D230FB          10          JP      NC,ERR
                                
000034 F834 3E13             7          LD      A,13H           ;LOADコマンド13H
000036 F836 CDDDFD          17          CALL    STCD            ;コマンドコード送信
000039 F839 A7               4          AND     A               ;00以外ならERROR
00003A F83A C230FB          10          JP      NZ,ERR
                                
00003D F83D E5              11          PUSH    HL
00003E F83E CD92FB          17          CALL    STFS            ;ファイルネーム送信
000041 F841 E1              10          POP     HL
000042 F842 A7               4          AND     A               ;00以外ならERROR
000043 F843 C230FB          10          JP      NZ,ERR
000046 F846 119DFC          10          LD      DE,MSG_MS       ;Savingメッセージ
000049 F849 CD281D          17          CALL    STRPRN
00004C F84C EB               4          EX      DE,HL
00004D F84D CD281D          17          CALL    STRPRN          ;ファイルネーム表示
000050 F850 CD4E37          17          CALL    CRLF
000053 F853 3AD7FD          13          LD      A,(WRKNX)       ;セーブ終了アドレス送信:ファイル長はArduino側で計算
000056 F856 CDA9FF          17          CALL    SNDBYTE
000059 F859 3AD8FD          13          LD      A,(WRKNX+1)
00005C F85C CDA9FF          17          CALL    SNDBYTE
00005F F85F 3AD5FD          13          LD      A,(WRKST)       ;セーブ開始アドレス送信
000062 F862 CDA9FF          17          CALL    SNDBYTE
000065 F865 3AD6FD          13          LD      A,(WRKST+1)
000068 F868 CDA9FF          17          CALL    SNDBYTE
00006B F86B 3A82FF          13          LD      A,(WRKEX)       ;実行開始アドレス送信
00006E F86E CDA9FF          17          CALL    SNDBYTE
000071 F871 3A83FF          13          LD      A,(WRKEX+1)
000074 F874 CDA9FF          17          CALL    SNDBYTE
                                        
000077 F877 2AD5FD          16          LD      HL,(WRKST)      ;セーブ開始アドレス
00007A F87A ED5BD7FD        20          LD      DE,(WRKNX)      ;セーブ終了アドレス
00007E F87E 7E               7  MS1:    LD      A,(HL)
00007F F87F CDA9FF          17          CALL    SNDBYTE
000082 F882 7D               4          LD      A,L
000083 F883 CD84FF          17          CALL    PRTDOT
000086 F886 AF               4          XOR     A
000087 F887 E5              11          PUSH    HL
000088 F888 ED52            15          SBC     HL,DE
00008A F88A E1              10          POP     HL
00008B F88B 2803            12          JR      Z,MS2
00008D F88D 23               6          INC     HL
00008E F88E 18EE            12          JR      MS1             ;セーブ終了アドレスまでループ
                                        
000090 F890 CD4E37          17  MS2:    CALL    CRLF
000093 F893 C3EDFD          10          JP      CMD0
                                
                                ;************* SBコマンド(BASICプログラムのSAVE) **************************
       F896                     BSAVE:
000096 F896 23               6          INC     HL
000097 F897 3E14             7          LD      A,14H           ;LOADコマンド14H
000099 F899 CDDDFD          17          CALL    STCD            ;コマンドコード送信
00009C F89C A7               4          AND     A               ;00以外ならERROR
00009D F89D C230FB          10          JP      NZ,ERR
                                
0000A0 F8A0 CDD5FE          17          CALL    STFN            ;SPACE読み飛ばし
0000A3 F8A3 E5              11          PUSH    HL
0000A4 F8A4 CD92FB          17          CALL    STFS            ;ファイルネーム送信
0000A7 F8A7 E1              10          POP     HL
0000A8 F8A8 A7               4          AND     A               ;00以外ならERROR
0000A9 F8A9 C230FB          10          JP      NZ,ERR
0000AC F8AC 11C3FC          10          LD      DE,MSG_BS       ;Loadingメッセージ
0000AF F8AF CD281D          17          CALL    STRPRN
0000B2 F8B2 EB               4          EX      DE,HL
0000B3 F8B3 CD281D          17          CALL    STRPRN          ;ファイルネーム表示
0000B6 F8B6 CD4E37          17          CALL    CRLF
                                
0000B9 F8B9 3A069E          13          LD      A,(NOWPROG)     ;B <- 現在PROG番号
0000BC F8BC 47               4          LD      B,A
                                        
0000BD F8BD 21C79D          10          LD      HL,PROGPNT      ;現在PROG番号と一致するPROGポインタを検索
0000C0 F8C0 7E               7  BS0:    LD      A,(HL)
0000C1 F8C1 B8               4          CP      B
0000C2 F8C2 2809            12          JR      Z,BS1
0000C4 F8C4 FEFF             7          CP      0FFH            ;現在PROG番号と一致せずにFFHが出現する場合はBASICプログラム無し
0000C6 F8C6 2857            12          JR      Z,BSERR
0000C8 F8C8 23               6          INC     HL
0000C9 F8C9 23               6          INC     HL
0000CA F8CA 23               6          INC     HL
0000CB F8CB 18F3            12          JR      BS0
       F8CD                     BS1:
0000CD F8CD 23               6          INC     HL
0000CE F8CE 7E               7          LD      A,(HL)          ;一致したPROGポインタから開始アドレスを取得
0000CF F8CF 32D5FD          13          LD      (WRKST),A
0000D2 F8D2 23               6          INC     HL
0000D3 F8D3 7E               7          LD      A,(HL)
0000D4 F8D4 32D6FD          13          LD      (WRKST+1),A
0000D7 F8D7 23               6          INC     HL
0000D8 F8D8 7E               7          LD      A,(HL)
0000D9 F8D9 FEFF             7          CP      0FFH            ;次のPROGが無し、BASICENDから終了アドレスを取得
0000DB F8DB 280C            12          JR      Z,BS2
0000DD F8DD 23               6          INC     HL
0000DE F8DE 7E               7          LD      A,(HL)          ;次のPROG有り、次のPROG開始アドレスを終了アドレスとして取得
0000DF F8DF 32D7FD          13          LD      (WRKNX),A
0000E2 F8E2 23               6          INC     HL
0000E3 F8E3 7E               7          LD      A,(HL)
0000E4 F8E4 32D8FD          13          LD      (WRKNX+1),A
0000E7 F8E7 180C            12          JR      BS3
0000E9 F8E9 3AEA9D          13  BS2:    LD      A,(BASICEND)    ;BASICENDを終了アドレスとして取得
0000EC F8EC 32D7FD          13          LD      (WRKNX),A
0000EF F8EF 3AEB9D          13          LD      A,(BASICEND+1)
0000F2 F8F2 32D8FD          13          LD      (WRKNX+1),A
0000F5 F8F5 2AD7FD          16  BS3:    LD      HL,(WRKNX)
0000F8 F8F8 ED5BD5FD        20          LD      DE,(WRKST)      ;ファイル長を計算してDEへ
0000FC F8FC AF               4          XOR     A
0000FD F8FD ED52            15          SBC     HL,DE
                                
0000FF F8FF 7D               4          LD      A,L             ;ファイル長送信:L
000100 F900 CDA9FF          17          CALL    SNDBYTE
000103 F903 7C               4          LD      A,H             ;ファイル長送信:H
000104 F904 CDA9FF          17          CALL    SNDBYTE
                                        
000107 F907 EB               4          EX      DE,HL
000108 F908 2AD5FD          16          LD      HL,(WRKST)      ;開始アドレス:HL、ファイル長:DE
                                        
       F90B                     BS4:    
00010B F90B 7E               7          LD      A,(HL)          ;実データ送信
00010C F90C CDA9FF          17          CALL    SNDBYTE
00010F F90F 23               6          INC     HL
000110 F910 1B               6          DEC     DE
000111 F911 7B               4          LD      A,E
000112 F912 CD84FF          17          CALL    PRTDOT
000115 F915 7B               4          LD      A,E
000116 F916 B2               4          OR      D
000117 F917 20F2            12          JR      NZ,BS4
                                
000119 F919 CD4E37          17          CALL    CRLF
00011C F91C C3EDFD          10          JP      CMD0
                                
       F91F                     BSERR:
00011F F91F 3EE1             7          LD      A,0E1H          ;BASIC PROGRAM無しエラーを表示
000121 F921 C330FB          10          JP      ERR
                                
                                ;*********** SLコマンド(SLOT切り替え) ****************
       F924                     SLOT:
000124 F924 1127FD          10          LD      DE,MSG_SLT      ;SLOT 0 or 1
000127 F927 CD281D          17          CALL    STRPRN
00012A F92A 2151F9          10          LD      HL,SDON+1
00012D F92D CDCB10          17  SLT1:   CALL    KINPUT          ;1文字入力
000130 F930 FE30             7          CP      '0'
000132 F932 2008            12          JR      NZ,SLT2
000134 F934 3600            10          LD      (HL),00H        ;(SDON+1) <- 00H
000136 F936 CD50F9          17          CALL    INIT
000139 F939 C3EDFD          10          JP      CMD0
00013C F93C FE31             7  SLT2:   CP      '1'
00013E F93E 2008            12          JR      NZ,SLT3
000140 F940 3601            10          LD      (HL),01H        ;(SDON+1) <- 01H
000142 F942 CD50F9          17          CALL    INIT            ;初期化再実行
000145 F945 C3EDFD          10          JP      CMD0
000148 F948 18E3            12  SLT3:   JR      SLT1            ;0,1以外なら再入力
                                
                                ;*************** FP-1100_SD初期化 *************************
       F94A                     INIT1:
00014A F94A 116FF9          10          LD      DE,MSG_INIT
00014D F94D CD281D          17          CALL    STRPRN
                                        
                                ;**** SLOT SELECT ****
       F950                     INIT:
000150 F950 3E00             7  SDON:   LD      A,00H           ;SLOT0を選択
000152 F952 01A0FF          10          LD      BC,0FFA0H
000155 F955 E601             7          AND     01H
000157 F957 F602             7          OR      02H
000159 F959 ED79            12          OUT     (C),A
                                
                                ;**** 8255初期化 ****
                                ;PORTC下位BITをOUTPUT、上位BITをINPUT、PORTBをINPUT、PORTAをOUTPUT
00015B F95B 3E8A             7          LD      A,8AH
00015D F95D 0103E0          10          LD      BC,PPI_R
000160 F960 ED79            12          OUT     (C),A
                                ;出力BITをリセット
000162 F962 3E00             7  INIT2:  LD      A,00H           ;PORTA <- 0
000164 F964 0100E0          10          LD      BC,PPI_A
000167 F967 ED79            12          OUT     (C),A
000169 F969 0102E0          10          LD      BC,PPI_C
00016C F96C ED79            12          OUT     (C),A           ;PORTC <- 0
00016E F96E C9              10          RET
                                
       F96F                     MSG_INIT:
00016F F96F 46502D313130305F            DB      'FP-1100_SD Initialize Ok!',0DH,0AH,00H
            534420496E697469    
            616C697A65204F6B    
            210D0A00            
00018B F98B 2A2A2A2A2A2A2A2A    TITLE:  DB      '******** FP-1100_SD ********',0DH,0AH,00H
            2046502D31313030    
            5F5344202A2A2A2A    
            2A2A2A2A0D0A00      
                                
                                ;******************* ここから以降を上書きしなければLM,LB,SD等プログラムのLOADは使用可能(F9AA)
                                ;*********** LMコマンド(機械語プログラムのLOAD) ***********************
       F9AA                     MLOAD:
0001AA F9AA CDF5FE          17          CALL    ML1
0001AD F9AD A7               4          AND     A
0001AE F9AE C230FB          10          JP      NZ,ERR
0001B1 F9B1 C3EDFD          10          JP      CMD0
                                
                                ;***************** LBコマンド(BASICプログラムのLOAD) **************************
                                ; 現在PROGをNEW処理した後に新たに未使用PROGポインタを使用してLOAD
       F9B4                     BLOAD:
0001B4 F9B4 23               6          INC     HL
0001B5 F9B5 3E18             7          LD      A,18H           ;LOADコマンド18H
0001B7 F9B7 CDDDFD          17          CALL    STCD            ;コマンドコード送信
0001BA F9BA A7               4          AND     A               ;00以外ならERROR
0001BB F9BB C230FB          10          JP      NZ,ERR
                                
0001BE F9BE CDD5FE          17          CALL    STFN            ;SPACE読み飛ばし
0001C1 F9C1 E5              11          PUSH    HL
0001C2 F9C2 CD92FB          17          CALL    STFS            ;ファイルネーム送信
0001C5 F9C5 E1              10          POP     HL
0001C6 F9C6 A7               4          AND     A               ;00以外ならERROR
0001C7 F9C7 C230FB          10          JP      NZ,ERR
0001CA F9CA 11ACFC          10          LD      DE,MSG_BL       ;Loadingメッセージ
0001CD F9CD CD281D          17          CALL    STRPRN
0001D0 F9D0 EB               4          EX      DE,HL
0001D1 F9D1 CD281D          17          CALL    STRPRN          ;ファイルネーム表示
0001D4 F9D4 CD4E37          17          CALL    CRLF
                                
0001D7 F9D7 CD0C28          17          CALL    NEWCMD          ;NEW処理
0001DA F9DA CD8DFF          17          CALL    RCVBYTE         ;ファイル長受信
0001DD F9DD 5F               4          LD      E,A
0001DE F9DE CD8DFF          17          CALL    RCVBYTE
0001E1 F9E1 57               4          LD      D,A
                                        
0001E2 F9E2 2AEA9D          16          LD      HL,(BASICEND)   ;BASICプログラムがRAMENDを超えないかチェック
0001E5 F9E5 19              11          ADD     HL,DE
0001E6 F9E6 ED4B689E        20          LD      BC,(TEXTEND)
0001EA F9EA AF               4          XOR     A
0001EB F9EB ED42            15          SBC     HL,BC
0001ED F9ED 304E            12          JR      NC,BLERR        ;超えるようであれば処理打ち切り
0001EF F9EF 2AEA9D          16          LD      HL,(BASICEND)
0001F2 F9F2 AF               4          XOR     A
0001F3 F9F3 CDA9FF          17          CALL    SNDBYTE         ;処理継続指示
                                
       F9F6                     BL2:    
0001F6 F9F6 CD8DFF          17          CALL    RCVBYTE         ;データ受信
0001F9 F9F9 77               7          LD      (HL),A
0001FA F9FA 23               6          INC     HL
0001FB F9FB 1B               6          DEC     DE
0001FC F9FC 7B               4          LD      A,E
0001FD F9FD CD84FF          17          CALL    PRTDOT
000200 FA00 7B               4          LD      A,E
000201 FA01 B2               4          OR      D
000202 FA02 20F2            12          JR      NZ,BL2          ;ファイル長分をループ
000204 FA04 CD4E37          17          CALL    CRLF
000207 FA07 AF               4          XOR     A
000208 FA08 77               7          LD      (HL),A          ;最後にENDマーク書き込み
                                        
000209 FA09 E5              11          PUSH    HL
00020A FA0A 11C79D          10          LD      DE,PROGPNT      ;未使用PROGポインタを検索
00020D FA0D 1A               7  BL0:    LD      A,(DE)
00020E FA0E FEFF             7          CP      0FFH
000210 FA10 2805            12          JR      Z,BL1
000212 FA12 13               6          INC     DE
000213 FA13 13               6          INC     DE
000214 FA14 13               6          INC     DE
000215 FA15 18F6            12          JR      BL0
000217 FA17 21069E          10  BL1:    LD      HL,NOWPROG      ;未使用PROGポインタに現在PROG番号を設定
00021A FA1A 7E               7          LD      A,(HL)
00021B FA1B 12               7          LD      (DE),A
00021C FA1C 21EA9D          10          LD      HL,BASICEND     ;現在PROGの先頭アドレスをセット
00021F FA1F 7E               7          LD      A,(HL)
000220 FA20 13               6          INC     DE
000221 FA21 12               7          LD      (DE),A
000222 FA22 23               6          INC     HL
000223 FA23 13               6          INC     DE
000224 FA24 7E               7          LD      A,(HL)
000225 FA25 12               7          LD      (DE),A
000226 FA26 13               6          INC     DE
000227 FA27 3EFF             7          LD      A,0FFH          ;次のPROGポインタに未使用フラグをセット
000229 FA29 12               7          LD      (DE),A
00022A FA2A E1              10          POP     HL
                                        
00022B FA2B 22EA9D          16          LD      (BASICEND),HL   ;BASICテキスト最終アドレス+1をセット
00022E FA2E 22EC9D          16          LD      (BASICEND+2),HL
000231 FA31 22EE9D          16          LD      (BASICEND+4),HL
000234 FA34 22F09D          16          LD      (BASICEND+6),HL
000237 FA37 22F29D          16          LD      (BASICEND+8),HL
                                        
00023A FA3A C3EDFD          10  BL3:    JP      CMD0
                                
       FA3D                     BLERR:
00023D FA3D 3EE0             7          LD      A,0E0H          ;AREA OVERエラーを表示
00023F FA3F CDA9FF          17          CALL    SNDBYTE
000242 FA42 C330FB          10          JP      ERR
                                
                                ;************* BASIC中からの機械語ロード *****************
                                ;                     CALL &HF803:REM filenameと記述する
       FA45                     BCALL:
000245 FA45 CD7AFB          17          CALL    GETCP
000248 FA48 2ADBFD          16          LD      HL,(WRKCP)      ;現在実行BASICプログラムの注目ポイントを取得
00024B FA4B 23               6          INC     HL              ;REM文をスキップ
00024C FA4C 23               6          INC     HL
00024D FA4D 23               6          INC     HL              ;REM文の後ろに書かれているfilenameの先頭アドレスを取得
00024E FA4E 3E17             7          LD      A,17H           ;LOADコマンド17H
000250 FA50 CDDDFD          17          CALL    STCD            ;コマンドコード送信
000253 FA53 A7               4          AND     A               ;00以外ならERROR
000254 FA54 C230FB          10          JP      NZ,ERR
000257 FA57 CDD5FE          17          CALL    STFN            ;SPACE読み飛ばし
00025A FA5A E5              11          PUSH    HL
00025B FA5B CD92FB          17          CALL    STFS            ;ファイルネーム送信
00025E FA5E E1              10          POP     HL
00025F FA5F A7               4          AND     A               ;00以外ならERROR
000260 FA60 C230FB          10          JP      NZ,ERR
000263 FA63 C307FF          10          JP      ML4
                                
                                ;************ SDコマンド(SD DIRECTORY LIST) **********************
       FA66                     SDIR:
000266 FA66 23               6          INC     HL
000267 FA67 7E               7          LD      A,(HL)
000268 FA68 FE0D             7          CP      0DH             ;0DHならファイル名無し
00026A FA6A 2803            12          JR      Z,SDIR1
00026C FA6C CDD5FE          17          CALL    STFN            ;SPACE読み飛ばし
       FA6F                     SDIR1:
00026F FA6F EB               4          EX      DE,HL
000270 FA70 CD98FA          17          CALL    DIRLIST             ;DIRLIST本体をコール
000273 FA73 280D            12          JR      Z,SDIR2             ;00ならHLにセットされているファイル名でBS MONITOR LTコマンドを実行
000275 FA75 F5              11          PUSH    AF
000276 FA76 CD8DFF          17          CALL    RCVBYTE             ;拡張子判定読み飛ばし
000279 FA79 F1              10          POP     AF
00027A FA7A FE01             7          CP      01H                 ;01なら通常リターン
00027C FA7C C430FB          17          CALL    NZ,ERR              ;00,01以外ならERROR
00027F FA7F C3EDFD          10          JP      CMD0
                                
       FA82                     SDIR2:
000282 FA82 2B               6          DEC     HL
000283 FA83 CD8DFF          17          CALL    RCVBYTE             ;選択ファイルの拡張子受信:0,BIN 1,BAS 2,FPT 3,その他
000286 FA86 FE00             7          CP      00H
000288 FA88 CAAAF9          10          JP      Z,MLOAD             ;BINならMLOADへ
00028B FA8B FE01             7          CP      01H
00028D FA8D CAB4F9          10          JP      Z,BLOAD             ;BASならBLOADへ
000290 FA90 3EE3             7          LD      A,0E3H
000292 FA92 CD7910          17          CALL    PR2HEX
000295 FA95 C330FB          10          JP      ERR                 ;以外はERROR
                                
                                ;**** DIRLIST本体  ****
                                ;****              戻り値 A=エラーコード ****
       FA98                     DIRLIST:
000298 FA98 3E11             7          LD      A,11H               ;DIRLISTコマンド11Hを送信
00029A FA9A CDDDFD          17          CALL    STCD                ;コマンドコード送信
00029D FA9D A7               4          AND     A                   ;00以外ならERROR
00029E FA9E C22FFB          10          JP      NZ,DLRET
                                        
0002A1 FAA1 C5              11          PUSH    BC
0002A2 FAA2 0621             7          LD      B,21H               ;ファイルネーム検索文字列33文字分を送信
0002A4 FAA4 1A               7  STLT1:  LD      A,(DE)
0002A5 FAA5 CDA9FF          17          CALL    SNDBYTE             ;ファイルネーム検索文字列を送信
0002A8 FAA8 13               6          INC     DE
0002A9 FAA9 10F9            13  STLT4:  DJNZ    STLT1
0002AB FAAB C1              10          POP     BC
0002AC FAAC CD8DFF          17          CALL    RCVBYTE             ;状態取得(00H=OK)
0002AF FAAF A7               4          AND     A                   ;00以外ならERROR
0002B0 FAB0 207D            12          JR      NZ,DLRET
                                
0002B2 FAB2 2185FE          10  DL1:    LD      HL,BUFF
0002B5 FAB5 CD8DFF          17  DL2:    CALL    RCVBYTE             ;'00H'を受信するまでを一行とする
0002B8 FAB8 A7               4          AND     A
0002B9 FAB9 2810            12          JR      Z,DL3
0002BB FABB FEFF             7          CP      0FFH                ;'0FFH'を受信したら終了
0002BD FABD 2819            12          JR      Z,DL4
0002BF FABF FEFD             7          CP      0FDH                ;'0FDH'受信で選択した文字列をファイルネームとして取得して終了
0002C1 FAC1 281D            12          JR      Z,DL9
0002C3 FAC3 FEFE             7          CP      0FEH                ;'0FEH'を受信したら一時停止して一文字入力待ち
0002C5 FAC5 283D            12          JR      Z,DL5
0002C7 FAC7 77               7          LD      (HL),A
0002C8 FAC8 23               6          INC     HL
0002C9 FAC9 18EA            12          JR      DL2
0002CB FACB 3600            10  DL3:    LD      (HL),00H
0002CD FACD 1185FE          10          LD      DE,BUFF             ;'00H'を受信したら一行分を表示して改行
0002D0 FAD0 CD281D          17          CALL    STRPRN
       FAD3                     DL33:
0002D3 FAD3 CD4E37          17          CALL    CRLF                ;改行
0002D6 FAD6 18DA            12          JR      DL1
       FAD8                     DL4:
0002D8 FAD8 CD8DFF          17          CALL    RCVBYTE             ;状態取得(00H=OK)
0002DB FADB 3E01             7          LD      A,01H
0002DD FADD A7               4          AND     A                   ;00以外ならERROR
0002DE FADE 184F            12          JR      DLRET
                                
0002E0 FAE0 CD4E37          17  DL9:    CALL    CRLF                ;改行
                                        
0002E3 FAE3 2185FE          10          LD      HL,BUFF             ;選択したファイルネームを再度取得
0002E6 FAE6 CD8DFF          17  DL91:   CALL    RCVBYTE
0002E9 FAE9 77               7          LD      (HL),A
0002EA FAEA FE00             7          CP      00H
0002EC FAEC 23               6          INC     HL
0002ED FAED 20F7            12          JR      NZ,DL91
                                
0002EF FAEF 1185FE          10          LD      DE,BUFF             ;取得したファイルネームを表示
0002F2 FAF2 CD281D          17          CALL    STRPRN
0002F5 FAF5 CD4E37          17          CALL    CRLF
0002F8 FAF8 CD8DFF          17          CALL    RCVBYTE             ;状態取得読み飛ばし
0002FB FAFB CD8DFF          17          CALL    RCVBYTE             ;状態取得(00H=OK)
                                
0002FE FAFE 2185FE          10          LD      HL,BUFF             ;取得したファイルネーム
000301 FB01 A7               4          AND     A                   ;00以外ならERROR
000302 FB02 182B            12          JR      DLRET
                                
       FB04                     DL5:
000304 FB04 11D9FC          10          LD      DE,MSG_KEY1         ;HIT ANT KEY表示
000307 FB07 CD281D          17          CALL    STRPRN
       FB0A                     DL6:
00030A FB0A CDCB10          17          CALL    KINPUT
00030D FB0D FE1B             7          CP      1BH                 ;ESCで打ち切り
00030F FB0F 2817            12          JR      Z,DL7
000311 FB11 FE30             7          CP      30H                 ;数字0〜9ならそのままArduinoへ送信してSETL処理へ
000313 FB13 3804            12          JR      C,DL61
000315 FB15 FE3A             7          CP      3AH
000317 FB17 3811            12          JR      C,DL8
       FB19                     DL61:
000319 FB19 FE42             7          CP      42H                 ;「B」で前ページ
00031B FB1B 280D            12          JR      Z,DL8
00031D FB1D FE08             7          CP      08H
00031F FB1F 2004            12          JR      NZ,DL62
000321 FB21 3E42             7          LD      A,42H
000323 FB23 1805            12          JR      DL8
000325 FB25 AF               4  DL62:   XOR     A                   ;それ以外で継続
000326 FB26 1802            12          JR      DL8
000328 FB28 3EFF             7  DL7:    LD      A,0FFH              ;0FFH中断コードを送信
00032A FB2A CDA9FF          17  DL8:    CALL    SNDBYTE
00032D FB2D 1883            12          JR      DL1
                                        
00032F FB2F C9              10  DLRET:  RET
                                
       FB30                     ERR:
       FB30                     ERR_E0:
000330 FB30 FEE0             7          CP      0E0H
000332 FB32 2005            12          JR      NZ,ERR_E1
000334 FB34 1136FD          10          LD      DE,MSG_E0
000337 FB37 1838            12          JR      ERRMSG
000339 FB39 FEE1             7  ERR_E1: CP      0E1H
00033B FB3B 2005            12          JR      NZ,ERR_E2
00033D FB3D 1156FD          10          LD      DE,MSG_E1
000340 FB40 182F            12          JR      ERRMSG
000342 FB42 FEE2             7  ERR_E2: CP      0E2H
000344 FB44 2005            12          JR      NZ,ERR_E3
000346 FB46 116FFD          10          LD      DE,MSG_E2
000349 FB49 1826            12          JR      ERRMSG
00034B FB4B FEE3             7  ERR_E3: CP      0E3H
00034D FB4D 2005            12          JR      NZ,ERR_F1
00034F FB4F 1182FD          10          LD      DE,MSG_E3
000352 FB52 181D            12          JR      ERRMSG
000354 FB54 FEF1             7  ERR_F1: CP      0F1H
000356 FB56 2005            12          JR      NZ,ERR_F0
000358 FB58 11B6FD          10          LD      DE,MSG_F1
00035B FB5B 1814            12          JR      ERRMSG
00035D FB5D FEF0             7  ERR_F0: CP      0F0H
00035F FB5F 2005            12          JR      NZ,ERR99
000361 FB61 119CFD          10          LD      DE,MSG_F0
000364 FB64 180B            12          JR      ERRMSG
000366 FB66 CD7910          17  ERR99:  CALL    PR2HEX
000369 FB69 3E3A             7          LD      A,':'
00036B FB6B CD2237          17          CALL    PRINT
00036E FB6E 11CFFD          10          LD      DE,MSG_FF
000371 FB71 CD281D          17  ERRMSG: CALL    STRPRN
000374 FB74 CD4E37          17          CALL    CRLF
000377 FB77 C3EDFD          10          JP      CMD0
                                
                                ;************** 行参照ポインタを取得(BASIC中からの機械語ロード用) *************************
00037A FB7A ED73D9FD        20  GETCP:  LD      (WRKSP),SP
00037E FB7E 2AD9FD          16          LD      HL,(WRKSP)
000381 FB81 23               6          INC     HL
000382 FB82 23               6          INC     HL
000383 FB83 23               6          INC     HL
000384 FB84 23               6          INC     HL
000385 FB85 22D9FD          16          LD      (WRKSP),HL
000388 FB88 7E               7          LD      A,(HL)
000389 FB89 32DBFD          13          LD      (WRKCP),A
00038C FB8C 23               6          INC     HL
00038D FB8D 7E               7          LD      A,(HL)
00038E FB8E 32DCFD          13          LD      (WRKCP+1),A
                                        
000391 FB91 C9              10          RET
                                
                                ;**** ファイルネーム送信(IN:HL ファイルネームの先頭) ******
000392 FB92 0620             7  STFS:   LD      B,20H
000394 FB94 7E               7  STFS1:  LD      A,(HL)          ;FNAME送信
000395 FB95 CDA9FF          17          CALL    SNDBYTE
000398 FB98 23               6          INC     HL
000399 FB99 10F9            13          DJNZ    STFS1
00039B FB9B 3E0D             7          LD      A,0DH
00039D FB9D CDA9FF          17          CALL    SNDBYTE
0003A0 FBA0 CD8DFF          17          CALL    RCVBYTE         ;状態取得(00H=OK)
0003A3 FBA3 C9              10          RET
                                
       FBA4                     MSG_CMD:
0003A4 FBA4 434F4D4D414E4420            DB      'COMMAND FAILED!',0DH,0AH
            4641494C4544210D    
            0A                  
0003B5 FBB5 204C4D207374723A            DB      ' LM str: Load Binary',0DH,0AH
            204C6F6164204269    
            6E6172790D0A        
0003CB FBCB 204C47207374723A            DB      ' LG str: Load Binary And Exe',0DH,0AH
            204C6F6164204269    
            6E61727920416E64    
            204578650D0A        
0003E9 FBE9 204C42207374723A            DB      ' LB str: Load Basic',0DH,0AH
            204C6F6164204261    
            7369630D0A          
0003FE FBFE 20534D2078787878            DB      ' SM xxxx,yyyy,zzzz,str: Save Binary',0DH,0AH
            2C797979792C7A7A    
            7A7A2C7374723A20    
            536176652042696E    
            6172790D0A          
000423 FC23 205342207374723A            DB      ' SB str: Save Basic',0DH,0AH
            2053617665204261    
            7369630D0A          
000438 FC38 205344207374723A            DB      ' SD str: SD Dir',0DH,0AH
            205344204469720D    
            0A                  
000449 FC49 20534C202020203A            DB      ' SL    : SLOT Change',0DH,0AH
            20534C4F54204368    
            616E67650D0A        
00045F FC5F 204720782020203A            DB      ' G x   : Exe Program',0DH,0AH
            204578652050726F    
            6772616D0D0A        
000475 FC75 2051206F7220423A            DB      ' Q or B: Return Basic',0DH,0AH,00H
            2052657475726E20    
            42617369630D0A00    
00048D FC8D 42696E617279204C    MSG_ML: DB      'Binary Loading:',00H
            6F6164696E673A00    
00049D FC9D 42696E6172792053    MSG_MS: DB      'Binary Saving:',00H
            6176696E673A00      
0004AC FCAC 4261736963205072    MSG_BL: DB      'Basic Program Loading:',00H
            6F6772616D204C6F    
            6164696E673A00      
0004C3 FCC3 4261736963205072    MSG_BS: DB      'Basic Program Saving:',00H
            6F6772616D205361    
            76696E673A00        
       FCD9                     MSG_KEY1:
0004D9 FCD9 53454C3A302D3920            DB      'SEL:0-9 NEXT:ANY BACK:B or BS BREAK:ESC',0DH,0AH,00H
            4E4558543A414E59    
            204241434B3A4220    
            6F72204253204252    
            45414B3A4553430D    
            0A00                
000503 FD03 4C4F4144204F6E6C    MSG_EXE:DB      'LOAD Only(0),LOAD And Execute(1)?',0DH,0AH,00H
            792830292C4C4F41    
            4420416E64204578    
            6563757465283129    
            3F0D0A00            
000527 FD27 534C4F542830292C    MSG_SLT:DB      'SLOT(0),(1)?',0DH,0AH,00H
            2831293F0D0A00      
000536 FD36 4261736963205072    MSG_E0: DB      'Basic Program Text Erea Over!',0DH,0AH,00H
            6F6772616D205465    
            7874204572656120    
            4F766572210D0A00    
000556 FD56 4261736963205072    MSG_E1: DB      'Basic Program Nothing!',0DH,0AH,00H
            6F6772616D204E6F    
            7468696E67210D0A    
            00                  
00056F FD6F 5361766520417265    MSG_E2: DB      'Save Area Error!',0DH,0AH,00H
            61204572726F7221    
            0D0A00              
000582 FD82 4E6F74204C6F6164    MSG_E3: DB      'Not Load This EXT File!',0DH,0AH,00H
            2054686973204558    
            542046696C65210D    
            0A00                
00059C FD9C 53442D4341524420    MSG_F0: DB      'SD-CARD Initialize Error!',00H
            496E697469616C69    
            7A65204572726F72    
            2100                
0005B6 FDB6 4E6F742046696E64    MSG_F1: DB      'Not Find Filename Error!',00H
            2046696C656E616D    
            65204572726F7221    
            00                  
0005CF FDCF 4572726F7200        MSG_FF: DB      'Error',00H
                                
0005D5 FDD5                     WRKST:  DS      2
0005D7 FDD7                     WRKNX:  DS      2
0005D9 FDD9                     WRKSP:  DS      2
0005DB FDDB                     WRKCP:  DS      2
                                
                                ;**** コマンド送信 (IN:A コマンドコード)****
0005DD FDDD CDA9FF          17  STCD:   CALL    SNDBYTE         ;Aレジスタのコマンドコードを送信
0005E0 FDE0 CD8DFF          17          CALL    RCVBYTE         ;状態取得(00H=OK)
0005E3 FDE3 C9              10          RET
                                
                                ;******************* ここから以降を上書きしなければLOAD後にGコマンドで実行可能(FDE4)
                                ;******* コマンド入力 *******************:
0005E4 FDE4 CD7AFB          17  ST4:    CALL    GETCP
                                ;       CALL    INIT            ;SLOT0を選択,8255初期化
0005E7 FDE7 118BF9          10          LD      DE,TITLE
0005EA FDEA CD281D          17          CALL    STRPRN
0005ED FDED CD39FE          17  CMD0:   CALL    LINPUT
0005F0 FDF0 2185FE          10          LD      HL,BUFF
0005F3 FDF3 7E               7          LD      A,(HL)
0005F4 FDF4 23               6          INC     HL
0005F5 FDF5 FE4C             7          CP      'L'
0005F7 FDF7 2012            12          JR      NZ,CMD1
0005F9 FDF9 7E               7          LD      A,(HL)
0005FA FDFA FE4D             7          CP      'M'             ;LMコマンド
0005FC FDFC CAAAF9          10          JP      Z,MLOAD
0005FF FDFF FE42             7          CP      'B'             ;LBコマンド
000601 FE01 CAB4F9          10          JP      Z,BLOAD
000604 FE04 FE47             7          CP      'G'             ;LGコマンド
000606 FE06 CA77FF          10          JP      Z,MEXE
000609 FE09 181B            12          JR      CMD9
00060B FE0B FE53             7  CMD1:   CP      'S'
00060D FE0D 2017            12          JR      NZ,CMD9
00060F FE0F 7E               7          LD      A,(HL)
000610 FE10 FE4D             7          CP      'M'             ;SMコマンド
000612 FE12 CA09F8          10          JP      Z,MSAVE
000615 FE15 FE42             7          CP      'B'             ;SBコマンド
000617 FE17 CA96F8          10          JP      Z,BSAVE
00061A FE1A FE44             7          CP      'D'             ;SDコマンド
00061C FE1C CA66FA          10          JP      Z,SDIR
00061F FE1F FE4C             7          CP      'L'             ;SLコマンド
000621 FE21 CA24F9          10          JP      Z,SLOT
000624 FE24 180B            12          JR      CMDERR
000626 FE26 FE51             7  CMD9:   CP      'Q'             ;Qコマンド
000628 FE28 C8              11          RET     Z
000629 FE29 FE42             7          CP      'B'             ;Bコマンド
00062B FE2B C8              11          RET     Z
00062C FE2C FE47             7          CP      'G'             ;Gコマンド
00062E FE2E CAE0FE          10          JP      Z,EXECUTE
000631 FE31 11A4FB          10  CMDERR: LD      DE,MSG_CMD      ;コマンドエラーMSG
000634 FE34 CD281D          17          CALL    STRPRN
000637 FE37 18B4            12          JR      CMD0
                                
                                ;******** 1行入力ルーチン ***********************
                                ;              BS,カーソル右キーによる文字訂正のみ有効
       FE39                     LINPUT:
000639 FE39 1183FE          10          LD      DE,PRMPT
00063C FE3C CD281D          17          CALL    STRPRN
00063F FE3F 2185FE          10          LD      HL,BUFF
000642 FE42 CDCB10          17  LI2:    CALL    KINPUT          ;1文字入力
000645 FE45 F5              11          PUSH    AF
000646 FE46 CD2237          17          CALL    PRINT           ;入力文字表示
000649 FE49 F1              10          POP     AF
00064A FE4A FE0D             7          CP      0DH             ;改行なら終了
00064C FE4C 2822            12          JR      Z,LEND
00064E FE4E FE1D             7          CP      1DH             ;カーソル左処理
000650 FE50 200D            12          JR      NZ,LI4
000652 FE52 2B               6  LI3:    DEC     HL
000653 FE53 3E20             7          LD      A,' '           ;カーソル位置の文字を空白に置き換え
000655 FE55 CD2237          17          CALL    PRINT
000658 FE58 3E1D             7          LD      A,1DH           ;もう一回カーソル左
00065A FE5A CD2237          17          CALL    PRINT
00065D FE5D 18E3            12          JR      LI2
00065F FE5F FE08             7  LI4:    CP      08H             ;BS処理
000661 FE61 2002            12          JR      NZ,LI5
000663 FE63 18ED            12          JR      LI3             ;カーソル左と同様に処理
000665 FE65 FE20             7  LI5:    CP      20H             ;コントロール文字ならBUFFに書き込まない
000667 FE67 38D9            12          JR      C,LI2
000669 FE69 CD76FE          17          CALL    LICHK
00066C FE6C 77               7          LD      (HL),A
00066D FE6D 23               6          INC     HL
00066E FE6E 18D2            12          JR      LI2
000670 FE70 AF               4  LEND:   XOR     A               ;0DHを00Hに置き換えて終了
000671 FE71 CD76FE          17          CALL    LICHK
000674 FE74 77               7          LD      (HL),A
000675 FE75 C9              10          RET
000676 FE76 EB               4  LICHK:  EX      DE,HL           ;カーソル左、BS処理でBUFF先頭を超えては戻らないようにチェック
000677 FE77 2185FE          10          LD      HL,BUFF
00067A FE7A ED52            15          SBC     HL,DE
00067C FE7C 3803            12          JR      C,LICHK1
00067E FE7E 1185FE          10          LD      DE,BUFF
000681 FE81 EB               4  LICHK1: EX      DE,HL
000682 FE82 C9              10          RET
                                
000683 FE83 3E00                PRMPT:  DB      '>',00H
000685 FE85                     BUFF:   DS      80
                                
                                ;****** FILE NAMEが取得できるまでスペースを読み飛ばし (IN:HL コマンド文字の次の文字 OUT:HL ファイルネームの先頭)*********
0006D5 FED5 F5              11  STFN:   PUSH    AF
0006D6 FED6 7E               7  STFN1:  LD      A,(HL)
0006D7 FED7 FE20             7          CP      20H
0006D9 FED9 2003            12          JR      NZ,STFN3
0006DB FEDB 23               6          INC     HL              ;ファイルネームまでスペース読み飛ばし
0006DC FEDC 18F8            12          JR      STFN1
0006DE FEDE F1              10  STFN3:  POP     AF
0006DF FEDF C9              10          RET
                                
                                ;*********** Gコマンド(16進数4桁のアドレスへJUMP) ***********************
       FEE0                     EXECUTE:
0006E0 FEE0 CDD5FE          17          CALL    STFN            ;SPACE読み飛ばし
0006E3 FEE3 7E               7          LD      A,(HL)          ;アドレス指定がなかったらWRKEXの示すアドレスで実行
0006E4 FEE4 A7               4          AND     A
0006E5 FEE5 2009            12          JR      NZ,EXE1
0006E7 FEE7 3A82FF          13          LD      A,(WRKEX)
0006EA FEEA 6F               4          LD      L,A
0006EB FEEB 3A83FF          13          LD      A,(WRKEX+1)
0006EE FEEE 67               4          LD      H,A
0006EF FEEF E9               4          JP      (HL)
0006F0 FEF0 EB               4  EXE1:   EX      DE,HL
0006F1 FEF1 CD3B10          17          CALL    STR2HEX         ;HL <- (DE)からの文字列を16進数4桁
0006F4 FEF4 E9               4          JP      (HL)
                                
                                ;********* 機械語ロード本体 ********************************
       FEF5                     ML1:
0006F5 FEF5 23               6          INC     HL
0006F6 FEF6 3E17             7          LD      A,17H           ;LOADコマンド17H
0006F8 FEF8 CDDDFD          17          CALL    STCD            ;コマンドコード送信
0006FB FEFB A7               4          AND     A               ;00以外ならERROR
0006FC FEFC C0              11          RET     NZ
0006FD FEFD CDD5FE          17          CALL    STFN            ;SPACE読み飛ばし
000700 FF00 E5              11          PUSH    HL
000701 FF01 CD92FB          17          CALL    STFS            ;ファイルネーム送信
000704 FF04 E1              10          POP     HL
000705 FF05 A7               4          AND     A               ;00以外ならERROR
000706 FF06 C0              11          RET     NZ
000707 FF07 118DFC          10  ML4:    LD      DE,MSG_ML       ;Loadingメッセージ
00070A FF0A CD281D          17          CALL    STRPRN
00070D FF0D EB               4          EX      DE,HL
00070E FF0E CD281D          17          CALL    STRPRN          ;ファイルネーム表示
000711 FF11 CD4E37          17          CALL    CRLF
                                
000714 FF14 CD8DFF          17          CALL    RCVBYTE         ;ファイル長受信
000717 FF17 5F               4          LD      E,A
000718 FF18 CD8DFF          17          CALL    RCVBYTE
00071B FF1B 57               4          LD      D,A
                                        
00071C FF1C 3E28             7          LD      A,'('
00071E FF1E CD2237          17          CALL    PRINT
000721 FF21 CD8DFF          17          CALL    RCVBYTE         ;開始アドレス受信
000724 FF24 6F               4          LD      L,A
000725 FF25 CD8DFF          17          CALL    RCVBYTE
000728 FF28 67               4          LD      H,A
000729 FF29 7C               4          LD      A,H
00072A FF2A CD7910          17          CALL    PR2HEX
00072D FF2D 7D               4          LD      A,L
00072E FF2E CD7910          17          CALL    PR2HEX
000731 FF31 E5              11          PUSH    HL
000732 FF32 19              11          ADD     HL,DE
000733 FF33 2B               6          DEC     HL
000734 FF34 3E2C             7          LD      A,','
000736 FF36 CD2237          17          CALL    PRINT
000739 FF39 7C               4          LD      A,H
00073A FF3A CD7910          17          CALL    PR2HEX
00073D FF3D 7D               4          LD      A,L
00073E FF3E CD7910          17          CALL    PR2HEX
000741 FF41 E1              10          POP     HL
000742 FF42 3E2C             7          LD      A,','
000744 FF44 CD2237          17          CALL    PRINT
000747 FF47 CD8DFF          17          CALL    RCVBYTE         ;EXECUTEアドレス受信
00074A FF4A 3282FF          13          LD      (WRKEX),A
00074D FF4D CD8DFF          17          CALL    RCVBYTE
000750 FF50 3283FF          13          LD      (WRKEX+1),A
000753 FF53 CD7910          17          CALL    PR2HEX
000756 FF56 3A82FF          13          LD      A,(WRKEX)
000759 FF59 CD7910          17          CALL    PR2HEX
                                
00075C FF5C 3E29             7          LD      A,')'
00075E FF5E CD2237          17          CALL    PRINT
000761 FF61 CD4E37          17          CALL    CRLF
                                
                                ;******************* ここから以降を上書きしなければLGコマンドでロード実行可能(FF64)
       FF64                     ML2:    
000764 FF64 CD8DFF          17          CALL    RCVBYTE         ;データ受信
000767 FF67 77               7          LD      (HL),A
000768 FF68 23               6          INC     HL
000769 FF69 1B               6          DEC     DE
00076A FF6A 7B               4          LD      A,E
00076B FF6B CD84FF          17          CALL    PRTDOT
00076E FF6E 7B               4          LD      A,E
00076F FF6F B2               4          OR      D
000770 FF70 20F2            12          JR      NZ,ML2          ;ファイル長分をループ
000772 FF72 CD4E37          17          CALL    CRLF
000775 FF75 AF               4          XOR     A
000776 FF76 C9              10          RET
                                
                                ;********** LGコマンド(機械語プログラムのLOAD、実行番地へのJUMP) ****************
       FF77                     MEXE:
000777 FF77 CDF5FE          17          CALL    ML1
00077A FF7A A7               4          AND     A
00077B FF7B C230FB          10          JP      NZ,ERR
00077E FF7E 2A82FF          16          LD      HL,(WRKEX)
000781 FF81 E9               4          JP      (HL)
                                
000782 FF82                     WRKEX:  DS      2
                                
                                ;************* SAVE、LOAD 進行状況用DOT表示 **********************
000784 FF84 A7               4  PRTDOT: AND     A
000785 FF85 2005            12          JR      NZ,PD1
000787 FF87 3E2E             7          LD      A,'.'
000789 FF89 CD2237          17          CALL    PRINT
00078C FF8C C9              10  PD1:    RET
                                
                                ;**** 1BYTE受信 ****
                                ;受信DATAをAレジスタにセットしてリターン
       FF8D                     RCVBYTE:
00078D FF8D CDE0FF          17          CALL    F1CHK           ;PORTC BIT7が1になるまでLOOP
000790 FF90 0101E0          10          LD      BC,PPI_B
000793 FF93 ED78            12          IN      A,(C)           ;PORTB -> A
000795 FF95 F5              11          PUSH    AF
000796 FF96 3E05             7          LD      A,05H
000798 FF98 0103E0          10          LD      BC,PPI_R
00079B FF9B ED79            12          OUT     (C),A           ;PORTC BIT2 <- 1
00079D FF9D CDD6FF          17          CALL    F2CHK           ;PORTC BIT7が0になるまでLOOP
0007A0 FFA0 3E04             7          LD      A,04H
0007A2 FFA2 0103E0          10          LD      BC,PPI_R
0007A5 FFA5 ED79            12          OUT     (C),A           ;PORTC BIT2 <- 0
0007A7 FFA7 F1              10          POP     AF
0007A8 FFA8 C9              10          RET
                                
                                ;**** 1BYTE送信 ****
                                ;Aレジスタの内容をPORTA下位4BITに4BITずつ送信
       FFA9                     SNDBYTE:
0007A9 FFA9 C5              11          PUSH    BC
0007AA FFAA F5              11          PUSH    AF
0007AB FFAB 1F               4          RRA
0007AC FFAC 1F               4          RRA
0007AD FFAD 1F               4          RRA
0007AE FFAE 1F               4          RRA
0007AF FFAF E60F             7          AND     0FH
0007B1 FFB1 CDBCFF          17          CALL    SND4BIT
0007B4 FFB4 F1              10          POP     AF
0007B5 FFB5 E60F             7          AND     0FH
0007B7 FFB7 CDBCFF          17          CALL    SND4BIT
0007BA FFBA C1              10          POP     BC
0007BB FFBB C9              10          RET
                                
                                ;**** 4BIT送信 ****
                                ;Aレジスタ下位4ビットを送信する
       FFBC                     SND4BIT:
0007BC FFBC 0100E0          10          LD      BC,PPI_A
0007BF FFBF ED79            12          OUT     (C),A
0007C1 FFC1 3E05             7          LD      A,05H
0007C3 FFC3 0103E0          10          LD      BC,PPI_R
0007C6 FFC6 ED79            12          OUT     (C),A           ;PORTC BIT2 <- 1
0007C8 FFC8 CDE0FF          17          CALL    F1CHK           ;PORTC BIT7が1になるまでLOOP
0007CB FFCB 3E04             7          LD      A,04H
0007CD FFCD 0103E0          10          LD      BC,PPI_R
0007D0 FFD0 ED79            12          OUT     (C),A           ;PORTC BIT2 <- 0
0007D2 FFD2 CDD6FF          17          CALL    F2CHK
0007D5 FFD5 C9              10          RET
                                
                                ;**** BUSYをCHECK(0) ****
                                ; E002H BIT7が0になるまでLOOP
0007D6 FFD6 0102E0          10  F2CHK:  LD      BC,PPI_C
0007D9 FFD9 ED78            12          IN      A,(C)
0007DB FFDB E680             7          AND     80H             ;PORTC BIT7 = 0?
0007DD FFDD 20F7            12          JR      NZ,F2CHK
0007DF FFDF C9              10          RET
                                
                                ;**** BUSYをCHECK(1) ****
                                ; E002H BIT7が1になるまでLOP
0007E0 FFE0 0102E0          10  F1CHK:  LD      BC,PPI_C
0007E3 FFE3 ED78            12          IN      A,(C)
0007E5 FFE5 E680             7          AND     80H             ;PORTC BIT7 = 1?
0007E7 FFE7 28F7            12          JR      Z,F1CHK
0007E9 FFE9 C9              10          RET
                                
                                        END
[EOF:BOOT.S:SHIFT_JIS]
