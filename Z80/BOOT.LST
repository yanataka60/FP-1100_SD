                                ;*** AILZ80ASM *** Z-80 Assembler, version 1.0.28.0, LST:Full:4
                                ;2025/7/11  条件付きアセンブルを導入
                                ;           SDコマンド時、SDコマンドでF9A9hを超えて機械語プログラムをLOADした時の挙動にバグがあったので修正。
                                ;           FDDAhを超えるLOADの場合は強制的に実行番地へジャンプすることに修正。
                                ;2025/7/13  BASICプログラムLOAD時のAREA OVERエラー表示のバグを修正。
                                ;2025/7/20  しょうもない記述を発見、バグではないので他のバグが見つかった時にまとめて修正します。
                                ;2025/7/30  BASICプログラム未入力でSAVEしようとしたときに'Basic Program Nothing!'と表示した後Arduinoが応答しなくなる
                                ;           バグを修正
                                
       0001                     SDF8        EQU     1           ;1=ORG F800H,0=ORG E800H
       0703                     KRNGC       EQU     0703H       ;キー入力バッファクリア,クリアしてからGETRGを実行することでキースキャンを実現できる
       070F                     GETRG       EQU     070FH       ;キー入力バッファからデータを取り出す A <- DATA Z=0:データあり,1:なし
       074F                     PRCRT       EQU     074FH       ;1文字表示 A<-DATA,コントロールコード動作
       0753                     CTPRN       EQU     0753H       ;1文字表示 A<-DATA,コントロール文字を表示
       07A4                     XCSR        EQU     07A4H       ;カーソル移動 9FD7H<-X座標,9FD8H<-Y座標
       0A73                     XMTON       EQU     0A73H       ;CMTのリモートスイッチON
       0A78                     XMTOFF      EQU     0A78H       ;CMTのリモートスイッチをOFF
       0A91                     XMTMD       EQU     0A91H       ;CMTのボーレートを指定 A<-00:1200,01:300
       0A9A                     XMTSY       EQU     0A9AH       ;CMTにREAD動作の開始を指示する
       0AA2                     XMTRD       EQU     0AA2H       ;CMTから1Byte読み取る B<-DATA,C<-状態
       0AB5                     XMTWR       EQU     0AB5H       ;CMTに1Byte出力 A<-DATA
       0AE0                     XMTFF       EQU     0AE0H       ;CMT関連 12bitのALL1を出力?
       103B                     STR2HEX     EQU     103BH       ;(DE)からの4文字を16進数4桁にしてHLへ,ERRORでBASICに復帰
       1079                     PR2HEX      EQU     1079H       ;Aレジスタの内容を16進数2桁で表示
       10CB                     KINPUT      EQU     10CBH       ;1文字入力(WAIT)
       280C                     NEWCMD      EQU     280CH       ;NEW処理
       3722                     PRINT       EQU     3722H       ;1文字出力
       374E                     CRLF        EQU     374EH       ;CRLF出力
       1D28                     STRPRN      EQU     1D28H       ;文字列表示 DE <- 先頭アドレス 終端は00H
       9DC7                     PROGPNT     EQU     9DC7H       ;9DC7H〜9DE5HまでPROGポインタ
                                ;                                 (PROGPNT+0:PROG番号,PROGPNT+1:BASICテキスト開始アドレス)x10個分
                                ;                                 使っていないPROGポインタの先頭にはFFhを書き込み
       9DE6                     BASICST     EQU     9DE6H       ;BASICテキスト開始番地
       9DEA                     BASICEND    EQU     9DEAH       ;BASICテキスト最終番地+1
       9E06                     NOWPROG     EQU     9E06H       ;現在PROG番号
       9E68                     TEXTEND     EQU     9E68H       ;BASICテキストエリア最終番地+1
                                
                                ;0605H〜067BH RS-232C関連
                                ;0605H
                                ;0629H
                                ;0636H
                                ;064EH
                                
       FFA0                     CPUSEL      EQU     0FFA0H
       FF00                     IOSEL       EQU     0FF00H
                                
       E000                     PPI_A       EQU     0E000H
       E001                     PPI_B       EQU     PPI_A+1
       E002                     PPI_C       EQU     PPI_A+2
       E003                     PPI_R       EQU     PPI_A+3
                                
                                ;0E000H PORTA 送信データ(下位4ビット)
                                ;0E001H PORTB 受信データ(8ビット)
                                ;
                                ;0E002H PORTC Bit
                                ;7 IN  CHK
                                ;6 IN
                                ;5 IN
                                ;4 IN 
                                ;3 OUT
                                ;2 OUT FLG
                                ;1 OUT
                                ;0 OUT
                                ;
                                ;0E003H コントロールレジスタ
                                
                                
                                #if SDF8 == 1
000000 F800                             ORG     0F800H
                                #else
                                        ORG     0E800H
                                #endif
                                
000000 F800 C3DFFD          10  START:  JP      ST4
000003 F803 C340FA          10  ST2:    JP      BCALL
000006 F806 C34DF9          10  ST3:    JP      INIT1
                                
                                ;*********** SMコマンド(機械語プログラムのSAVE) ******************************
       F809                     MSAVE:
000009 F809 23               6          INC     HL
00000A F80A CDD0FE          17          CALL    STFN            ;SPACE読み飛ばし
00000D F80D EB               4          EX      DE,HL
00000E F80E CD3B10          17          CALL    STR2HEX         ;セーブ開始アドレス変換
000011 F811 22D0FD          16          LD      (WRKST),HL
000014 F814 13               6          INC     DE
000015 F815 CD3B10          17          CALL    STR2HEX         ;セーブ終了アドレス変換
000018 F818 22D2FD          16          LD      (WRKNX),HL
00001B F81B 13               6          INC     DE
00001C F81C CD3B10          17          CALL    STR2HEX         ;実行開始アドレス変換
00001F F81F 228CFF          16          LD      (WRKEX),HL
000022 F822 13               6          INC     DE
000023 F823 D5              11          PUSH    DE
                                        
000024 F824 2AD0FD          16          LD      HL,(WRKST)      ;セーブ終了がセーブ開始より大きくなければエラー
000027 F827 ED5BD2FD        20          LD      DE,(WRKNX)
00002B F82B AF               4          XOR     A
00002C F82C ED52            15          SBC     HL,DE
00002E F82E E1              10          POP     HL
00002F F82F 3EE2             7          LD      A,0E2H          ;ERRMSG
000031 F831 D22BFB          10          JP      NC,ERR
                                
000034 F834 3E13             7          LD      A,13H           ;LOADコマンド13H
000036 F836 CDD8FD          17          CALL    STCD            ;コマンドコード送信
000039 F839 A7               4          AND     A               ;00以外ならERROR
00003A F83A C22BFB          10          JP      NZ,ERR
                                
00003D F83D E5              11          PUSH    HL
00003E F83E CD8DFB          17          CALL    STFS            ;ファイルネーム送信
000041 F841 E1              10          POP     HL
000042 F842 A7               4          AND     A               ;00以外ならERROR
000043 F843 C22BFB          10          JP      NZ,ERR
000046 F846 1198FC          10          LD      DE,MSG_MS       ;Savingメッセージ
000049 F849 CD281D          17          CALL    STRPRN
00004C F84C EB               4          EX      DE,HL
00004D F84D CD281D          17          CALL    STRPRN          ;ファイルネーム表示
000050 F850 CD4E37          17          CALL    CRLF
000053 F853 3AD2FD          13          LD      A,(WRKNX)       ;セーブ終了アドレス送信:ファイル長はArduino側で計算
000056 F856 CDB3FF          17          CALL    SNDBYTE
000059 F859 3AD3FD          13          LD      A,(WRKNX+1)
00005C F85C CDB3FF          17          CALL    SNDBYTE
00005F F85F 3AD0FD          13          LD      A,(WRKST)       ;セーブ開始アドレス送信
000062 F862 CDB3FF          17          CALL    SNDBYTE
000065 F865 3AD1FD          13          LD      A,(WRKST+1)
000068 F868 CDB3FF          17          CALL    SNDBYTE
00006B F86B 3A8CFF          13          LD      A,(WRKEX)       ;実行開始アドレス送信
00006E F86E CDB3FF          17          CALL    SNDBYTE
000071 F871 3A8DFF          13          LD      A,(WRKEX+1)
000074 F874 CDB3FF          17          CALL    SNDBYTE
                                        
000077 F877 2AD0FD          16          LD      HL,(WRKST)      ;セーブ開始アドレス
00007A F87A ED5BD2FD        20          LD      DE,(WRKNX)      ;セーブ終了アドレス
00007E F87E 7E               7  MS1:    LD      A,(HL)
00007F F87F CDB3FF          17          CALL    SNDBYTE
000082 F882 7D               4          LD      A,L
000083 F883 CD8EFF          17          CALL    PRTDOT
000086 F886 AF               4          XOR     A
000087 F887 E5              11          PUSH    HL
000088 F888 ED52            15          SBC     HL,DE
00008A F88A E1              10          POP     HL
00008B F88B 2803            12          JR      Z,MS2
00008D F88D 23               6          INC     HL
00008E F88E 18EE            12          JR      MS1             ;セーブ終了アドレスまでループ
                                        
000090 F890 CD4E37          17  MS2:    CALL    CRLF
000093 F893 C3E8FD          10          JP      CMD0
                                
                                ;************* SBコマンド(BASICプログラムのSAVE) **************************
       F896                     BSAVE:
000096 F896 E5              11          PUSH    HL
000097 F897 3A069E          13          LD      A,(NOWPROG)     ;B <- 現在PROG番号
00009A F89A 47               4          LD      B,A
                                        
00009B F89B 21C79D          10          LD      HL,PROGPNT      ;現在PROG番号と一致するPROGポインタを検索
00009E F89E 7E               7  BS0:    LD      A,(HL)
00009F F89F B8               4          CP      B
0000A0 F8A0 2809            12          JR      Z,BS1
0000A2 F8A2 FEFF             7          CP      0FFH            ;現在PROG番号と一致せずにFFHが出現する場合はBASICプログラム無し
0000A4 F8A4 287B            12          JR      Z,BSERR
0000A6 F8A6 23               6          INC     HL
0000A7 F8A7 23               6          INC     HL
0000A8 F8A8 23               6          INC     HL
0000A9 F8A9 18F3            12          JR      BS0
       F8AB                     BS1:
0000AB F8AB 23               6          INC     HL
0000AC F8AC 7E               7          LD      A,(HL)          ;一致したPROGポインタから開始アドレスを取得
0000AD F8AD 32D0FD          13          LD      (WRKST),A
0000B0 F8B0 23               6          INC     HL
0000B1 F8B1 7E               7          LD      A,(HL)
0000B2 F8B2 32D1FD          13          LD      (WRKST+1),A
0000B5 F8B5 23               6          INC     HL
0000B6 F8B6 7E               7          LD      A,(HL)
0000B7 F8B7 FEFF             7          CP      0FFH            ;次のPROGが無し、BASICENDから終了アドレスを取得
0000B9 F8B9 280C            12          JR      Z,BS2
0000BB F8BB 23               6          INC     HL
0000BC F8BC 7E               7          LD      A,(HL)          ;次のPROG有り、次のPROG開始アドレスを終了アドレスとして取得
0000BD F8BD 32D2FD          13          LD      (WRKNX),A
0000C0 F8C0 23               6          INC     HL
0000C1 F8C1 7E               7          LD      A,(HL)
0000C2 F8C2 32D3FD          13          LD      (WRKNX+1),A
0000C5 F8C5 180C            12          JR      BS3
0000C7 F8C7 3AEA9D          13  BS2:    LD      A,(BASICEND)    ;BASICENDを終了アドレスとして取得
0000CA F8CA 32D2FD          13          LD      (WRKNX),A
0000CD F8CD 3AEB9D          13          LD      A,(BASICEND+1)
0000D0 F8D0 32D3FD          13          LD      (WRKNX+1),A
0000D3 F8D3 E1              10  BS3:    POP     HL
0000D4 F8D4 23               6          INC     HL
0000D5 F8D5 3E14             7          LD      A,14H           ;LOADコマンド14H
0000D7 F8D7 CDD8FD          17          CALL    STCD            ;コマンドコード送信
0000DA F8DA A7               4          AND     A               ;00以外ならERROR
0000DB F8DB C22BFB          10          JP      NZ,ERR
                                
0000DE F8DE CDD0FE          17          CALL    STFN            ;SPACE読み飛ばし
0000E1 F8E1 E5              11          PUSH    HL
0000E2 F8E2 CD8DFB          17          CALL    STFS            ;ファイルネーム送信
0000E5 F8E5 E1              10          POP     HL
0000E6 F8E6 A7               4          AND     A               ;00以外ならERROR
0000E7 F8E7 C22BFB          10          JP      NZ,ERR
0000EA F8EA 11BEFC          10          LD      DE,MSG_BS       ;Loadingメッセージ
0000ED F8ED CD281D          17          CALL    STRPRN
0000F0 F8F0 EB               4          EX      DE,HL
0000F1 F8F1 CD281D          17          CALL    STRPRN          ;ファイルネーム表示
0000F4 F8F4 CD4E37          17          CALL    CRLF
                                
0000F7 F8F7 2AD2FD          16          LD      HL,(WRKNX)
0000FA F8FA ED5BD0FD        20          LD      DE,(WRKST)      ;ファイル長を計算してDEへ
0000FE F8FE AF               4          XOR     A
0000FF F8FF ED52            15          SBC     HL,DE
                                
000101 F901 7D               4          LD      A,L             ;ファイル長送信:L
000102 F902 CDB3FF          17          CALL    SNDBYTE
000105 F905 7C               4          LD      A,H             ;ファイル長送信:H
000106 F906 CDB3FF          17          CALL    SNDBYTE
                                        
000109 F909 EB               4          EX      DE,HL
00010A F90A 2AD0FD          16          LD      HL,(WRKST)      ;開始アドレス:HL、ファイル長:DE
                                        
       F90D                     BS4:    
00010D F90D 7E               7          LD      A,(HL)          ;実データ送信
00010E F90E CDB3FF          17          CALL    SNDBYTE
000111 F911 23               6          INC     HL
000112 F912 1B               6          DEC     DE
000113 F913 7B               4          LD      A,E
000114 F914 CD8EFF          17          CALL    PRTDOT
000117 F917 7B               4          LD      A,E
000118 F918 B2               4          OR      D
000119 F919 20F2            12          JR      NZ,BS4
                                
00011B F91B CD4E37          17          CALL    CRLF
00011E F91E C3E8FD          10          JP      CMD0
                                
000121 F921 E1              10  BSERR:  POP     HL
000122 F922 3EE1             7          LD      A,0E1H          ;BASIC PROGRAM無しエラーを表示
000124 F924 C32BFB          10          JP      ERR
                                
                                ;*********** SLコマンド(SLOT切り替え) ****************
       F927                     SLOT:
000127 F927 1122FD          10          LD      DE,MSG_SLT      ;SLOT 0 or 1
00012A F92A CD281D          17          CALL    STRPRN
00012D F92D 2154F9          10          LD      HL,SDON+1
000130 F930 CDCB10          17  SLT1:   CALL    KINPUT          ;1文字入力
000133 F933 FE30             7          CP      '0'
000135 F935 2008            12          JR      NZ,SLT2
000137 F937 3600            10          LD      (HL),00H        ;(SDON+1) <- 00H
000139 F939 CD53F9          17          CALL    INIT
00013C F93C C3E8FD          10          JP      CMD0
00013F F93F FE31             7  SLT2:   CP      '1'
000141 F941 2008            12          JR      NZ,SLT3
000143 F943 3601            10          LD      (HL),01H        ;(SDON+1) <- 01H
000145 F945 CD53F9          17          CALL    INIT            ;初期化再実行
000148 F948 C3E8FD          10          JP      CMD0
00014B F94B 18E3            12  SLT3:   JR      SLT1            ;0,1以外なら再入力
                                
                                ;*************** FP-1100_SD初期化 *************************
       F94D                     INIT1:
00014D F94D 1172F9          10          LD      DE,MSG_INIT
000150 F950 CD281D          17          CALL    STRPRN
                                        
                                ;**** SLOT SELECT ****
       F953                     INIT:
000153 F953 3E00             7  SDON:   LD      A,00H           ;SLOT0を選択
000155 F955 01A0FF          10          LD      BC,0FFA0H
000158 F958 E601             7          AND     01H
00015A F95A F602             7          OR      02H
00015C F95C ED79            12          OUT     (C),A
                                
                                ;**** 8255初期化 ****
                                ;PORTC下位BITをOUTPUT、上位BITをINPUT、PORTBをINPUT、PORTAをOUTPUT
00015E F95E 3E8A             7          LD      A,8AH
000160 F960 0103E0          10          LD      BC,PPI_R
000163 F963 ED79            12          OUT     (C),A
                                ;出力BITをリセット
000165 F965 3E00             7  INIT2:  LD      A,00H           ;PORTA <- 0
000167 F967 0100E0          10          LD      BC,PPI_A
00016A F96A ED79            12          OUT     (C),A
00016C F96C 0102E0          10          LD      BC,PPI_C
00016F F96F ED79            12          OUT     (C),A           ;PORTC <- 0
000171 F971 C9              10          RET
                                
       F972                     MSG_INIT:
000172 F972 46502D313130305F            DB      'FP-1100_SD Initialize Ok!',0DH,0AH,00H
            534420496E697469    
            616C697A65204F6B    
            210D0A00            
00018E F98E 2A2A2A2A2A2A2A2A    TITLE:  DB      '******** FP-1100_SD ********',0DH,0AH,00H
            2046502D31313030    
            5F5344202A2A2A2A    
            2A2A2A2A0D0A00      
                                
                                ;******************* ここから以降を上書きしなければLM,LB,SD等プログラムのLOADは使用可能(F9AC)
                                ;***************** LBコマンド(BASICプログラムのLOAD) **************************
                                ; 現在PROGをNEW処理した後に新たに未使用PROGポインタを使用してLOAD
       F9AD                     BLOAD:
0001AD F9AD 23               6          INC     HL
0001AE F9AE 3E18             7          LD      A,18H           ;LOADコマンド18H
0001B0 F9B0 CDD8FD          17          CALL    STCD            ;コマンドコード送信
0001B3 F9B3 A7               4          AND     A               ;00以外ならERROR
0001B4 F9B4 C22BFB          10          JP      NZ,ERR
                                
0001B7 F9B7 CDD0FE          17          CALL    STFN            ;SPACE読み飛ばし
0001BA F9BA E5              11          PUSH    HL
0001BB F9BB CD8DFB          17          CALL    STFS            ;ファイルネーム送信
0001BE F9BE E1              10          POP     HL
0001BF F9BF A7               4          AND     A               ;00以外ならERROR
0001C0 F9C0 C22BFB          10          JP      NZ,ERR
0001C3 F9C3 11A7FC          10          LD      DE,MSG_BL       ;Loadingメッセージ
0001C6 F9C6 CD281D          17          CALL    STRPRN
0001C9 F9C9 EB               4          EX      DE,HL
0001CA F9CA CD281D          17          CALL    STRPRN          ;ファイルネーム表示
0001CD F9CD CD4E37          17          CALL    CRLF
                                
0001D0 F9D0 CD0C28          17          CALL    NEWCMD          ;NEW処理
0001D3 F9D3 CD97FF          17          CALL    RCVBYTE         ;ファイル長受信
0001D6 F9D6 5F               4          LD      E,A
0001D7 F9D7 CD97FF          17          CALL    RCVBYTE
0001DA F9DA 57               4          LD      D,A
                                        
0001DB F9DB 2AEA9D          16          LD      HL,(BASICEND)   ;BASICプログラムがRAMENDを超えないかチェック
0001DE F9DE 19              11          ADD     HL,DE
0001DF F9DF ED4B689E        20          LD      BC,(TEXTEND)
0001E3 F9E3 AF               4          XOR     A
0001E4 F9E4 ED42            15          SBC     HL,BC
0001E6 F9E6 304E            12          JR      NC,BLERR        ;超えるようであれば処理打ち切り
0001E8 F9E8 2AEA9D          16          LD      HL,(BASICEND)
0001EB F9EB AF               4          XOR     A
0001EC F9EC CDB3FF          17          CALL    SNDBYTE         ;処理継続指示
                                
       F9EF                     BL2:    
0001EF F9EF CD97FF          17          CALL    RCVBYTE         ;データ受信
0001F2 F9F2 77               7          LD      (HL),A
0001F3 F9F3 23               6          INC     HL
0001F4 F9F4 1B               6          DEC     DE
0001F5 F9F5 7B               4          LD      A,E
0001F6 F9F6 CD8EFF          17          CALL    PRTDOT
0001F9 F9F9 7B               4          LD      A,E
0001FA F9FA B2               4          OR      D
0001FB F9FB 20F2            12          JR      NZ,BL2          ;ファイル長分をループ
0001FD F9FD CD4E37          17          CALL    CRLF
000200 FA00 AF               4          XOR     A
000201 FA01 77               7          LD      (HL),A          ;最後にENDマーク書き込み
                                        
000202 FA02 E5              11          PUSH    HL
000203 FA03 11C79D          10          LD      DE,PROGPNT      ;未使用PROGポインタを検索
000206 FA06 1A               7  BL0:    LD      A,(DE)
000207 FA07 FEFF             7          CP      0FFH
000209 FA09 2805            12          JR      Z,BL1
00020B FA0B 13               6          INC     DE
00020C FA0C 13               6          INC     DE
00020D FA0D 13               6          INC     DE
00020E FA0E 18F6            12          JR      BL0
000210 FA10 21069E          10  BL1:    LD      HL,NOWPROG      ;未使用PROGポインタに現在PROG番号を設定
000213 FA13 7E               7          LD      A,(HL)
000214 FA14 12               7          LD      (DE),A
000215 FA15 21EA9D          10          LD      HL,BASICEND     ;現在PROGの先頭アドレスをセット
000218 FA18 7E               7          LD      A,(HL)
000219 FA19 13               6          INC     DE
00021A FA1A 12               7          LD      (DE),A
00021B FA1B 23               6          INC     HL
00021C FA1C 13               6          INC     DE
00021D FA1D 7E               7          LD      A,(HL)
00021E FA1E 12               7          LD      (DE),A
00021F FA1F 13               6          INC     DE
000220 FA20 3EFF             7          LD      A,0FFH          ;次のPROGポインタに未使用フラグをセット
000222 FA22 12               7          LD      (DE),A
000223 FA23 E1              10          POP     HL
                                        
000224 FA24 22EA9D          16          LD      (BASICEND),HL   ;BASICテキスト最終アドレス+1をセット
000227 FA27 22EC9D          16          LD      (BASICEND+2),HL
00022A FA2A 22EE9D          16          LD      (BASICEND+4),HL
00022D FA2D 22F09D          16          LD      (BASICEND+6),HL
000230 FA30 22F29D          16          LD      (BASICEND+8),HL
                                        
000233 FA33 C3E8FD          10  BL3:    JP      CMD0
                                
       FA36                     BLERR:
000236 FA36 3EE0             7          LD      A,0E0H          ;AREA OVERエラーを表示
000238 FA38 F5              11          PUSH    AF
000239 FA39 CDB3FF          17          CALL    SNDBYTE
00023C FA3C F1              10          POP     AF
00023D FA3D C32BFB          10          JP      ERR
                                
                                ;************* BASIC中からの機械語ロード *****************
                                ;                     CALL &HF803:REM filenameと記述する
       FA40                     BCALL:
000240 FA40 CD75FB          17          CALL    GETCP
000243 FA43 2AD6FD          16          LD      HL,(WRKCP)      ;現在実行BASICプログラムの注目ポイントを取得
000246 FA46 23               6          INC     HL              ;REM文をスキップ
000247 FA47 23               6          INC     HL
000248 FA48 23               6          INC     HL              ;REM文の後ろに書かれているfilenameの先頭アドレスを取得
000249 FA49 3E17             7          LD      A,17H           ;LOADコマンド17H
00024B FA4B CDD8FD          17          CALL    STCD            ;コマンドコード送信
00024E FA4E A7               4          AND     A               ;00以外ならERROR
00024F FA4F C22BFB          10          JP      NZ,ERR
000252 FA52 CDD0FE          17          CALL    STFN            ;SPACE読み飛ばし
000255 FA55 E5              11          PUSH    HL
000256 FA56 CD8DFB          17          CALL    STFS            ;ファイルネーム送信
000259 FA59 E1              10          POP     HL
00025A FA5A A7               4          AND     A               ;00以外ならERROR
00025B FA5B C22BFB          10          JP      NZ,ERR
00025E FA5E C3FDFE          10          JP      ML4
                                
                                ;************ SDコマンド(SD DIRECTORY LIST) **********************
       FA61                     SDIR:
000261 FA61 23               6          INC     HL
000262 FA62 7E               7          LD      A,(HL)
000263 FA63 FE00             7          CP      00H             ;00Hならファイル名無し
000265 FA65 2803            12          JR      Z,SDIR1
000267 FA67 CDD0FE          17          CALL    STFN            ;SPACE読み飛ばし
       FA6A                     SDIR1:
00026A FA6A EB               4          EX      DE,HL
00026B FA6B CD93FA          17          CALL    DIRLIST             ;DIRLIST本体をコール
00026E FA6E 280D            12          JR      Z,SDIR2             ;00ならHLにセットされているファイル名でBS MONITOR LTコマンドを実行
000270 FA70 F5              11          PUSH    AF
000271 FA71 CD97FF          17          CALL    RCVBYTE             ;拡張子判定読み飛ばし
000274 FA74 F1              10          POP     AF
000275 FA75 FE01             7          CP      01H                 ;01なら通常リターン
000277 FA77 C42BFB          17          CALL    NZ,ERR              ;00,01以外ならERROR
00027A FA7A C3E8FD          10          JP      CMD0
                                
       FA7D                     SDIR2:
00027D FA7D 2B               6          DEC     HL
00027E FA7E CD97FF          17          CALL    RCVBYTE             ;選択ファイルの拡張子受信:0,BIN 1,BAS 2,FPT 3,その他
000281 FA81 FE00             7          CP      00H
000283 FA83 CA6DFF          10          JP      Z,MLOAD             ;BINならMLOADへ
000286 FA86 FE01             7          CP      01H
000288 FA88 CAADF9          10          JP      Z,BLOAD             ;BASならBLOADへ
00028B FA8B 3EE3             7          LD      A,0E3H
00028D FA8D CD7910          17          CALL    PR2HEX
000290 FA90 C32BFB          10          JP      ERR                 ;以外はERROR
                                
                                ;**** DIRLIST本体  ****
                                ;****              戻り値 A=エラーコード ****
       FA93                     DIRLIST:
000293 FA93 3E11             7          LD      A,11H               ;DIRLISTコマンド11Hを送信
000295 FA95 CDD8FD          17          CALL    STCD                ;コマンドコード送信
000298 FA98 A7               4          AND     A                   ;00以外ならERROR
000299 FA99 C22AFB          10          JP      NZ,DLRET
                                        
00029C FA9C C5              11          PUSH    BC
00029D FA9D 0621             7          LD      B,21H               ;ファイルネーム検索文字列33文字分を送信
00029F FA9F 1A               7  STLT1:  LD      A,(DE)
0002A0 FAA0 CDB3FF          17          CALL    SNDBYTE             ;ファイルネーム検索文字列を送信
0002A3 FAA3 13               6          INC     DE
0002A4 FAA4 10F9            13  STLT4:  DJNZ    STLT1
0002A6 FAA6 C1              10          POP     BC
0002A7 FAA7 CD97FF          17          CALL    RCVBYTE             ;状態取得(00H=OK)
0002AA FAAA A7               4          AND     A                   ;00以外ならERROR
0002AB FAAB 207D            12          JR      NZ,DLRET
                                
0002AD FAAD 2180FE          10  DL1:    LD      HL,BUFF
0002B0 FAB0 CD97FF          17  DL2:    CALL    RCVBYTE             ;'00H'を受信するまでを一行とする
0002B3 FAB3 A7               4          AND     A
0002B4 FAB4 2810            12          JR      Z,DL3
0002B6 FAB6 FEFF             7          CP      0FFH                ;'0FFH'を受信したら終了
0002B8 FAB8 2819            12          JR      Z,DL4
0002BA FABA FEFD             7          CP      0FDH                ;'0FDH'受信で選択した文字列をファイルネームとして取得して終了
0002BC FABC 281D            12          JR      Z,DL9
0002BE FABE FEFE             7          CP      0FEH                ;'0FEH'を受信したら一時停止して一文字入力待ち
0002C0 FAC0 283D            12          JR      Z,DL5
0002C2 FAC2 77               7          LD      (HL),A
0002C3 FAC3 23               6          INC     HL
0002C4 FAC4 18EA            12          JR      DL2
0002C6 FAC6 3600            10  DL3:    LD      (HL),00H
0002C8 FAC8 1180FE          10          LD      DE,BUFF             ;'00H'を受信したら一行分を表示して改行
0002CB FACB CD281D          17          CALL    STRPRN
       FACE                     DL33:
0002CE FACE CD4E37          17          CALL    CRLF                ;改行
0002D1 FAD1 18DA            12          JR      DL1
       FAD3                     DL4:
0002D3 FAD3 CD97FF          17          CALL    RCVBYTE             ;状態取得(00H=OK)
0002D6 FAD6 3E01             7          LD      A,01H
0002D8 FAD8 A7               4          AND     A                   ;00以外ならERROR
0002D9 FAD9 184F            12          JR      DLRET
                                
0002DB FADB CD4E37          17  DL9:    CALL    CRLF                ;改行
                                        
0002DE FADE 2180FE          10          LD      HL,BUFF             ;選択したファイルネームを再度取得
0002E1 FAE1 CD97FF          17  DL91:   CALL    RCVBYTE
0002E4 FAE4 77               7          LD      (HL),A
0002E5 FAE5 FE00             7          CP      00H
0002E7 FAE7 23               6          INC     HL
0002E8 FAE8 20F7            12          JR      NZ,DL91
                                
0002EA FAEA 1180FE          10          LD      DE,BUFF             ;取得したファイルネームを表示
0002ED FAED CD281D          17          CALL    STRPRN
0002F0 FAF0 CD4E37          17          CALL    CRLF
0002F3 FAF3 CD97FF          17          CALL    RCVBYTE             ;状態取得読み飛ばし
0002F6 FAF6 CD97FF          17          CALL    RCVBYTE             ;状態取得(00H=OK)
                                
0002F9 FAF9 2180FE          10          LD      HL,BUFF             ;取得したファイルネーム
0002FC FAFC A7               4          AND     A                   ;00以外ならERROR
0002FD FAFD 182B            12          JR      DLRET
                                
       FAFF                     DL5:
0002FF FAFF 11D4FC          10          LD      DE,MSG_KEY1         ;HIT ANT KEY表示
000302 FB02 CD281D          17          CALL    STRPRN
       FB05                     DL6:
000305 FB05 CDCB10          17          CALL    KINPUT
000308 FB08 FE1B             7          CP      1BH                 ;ESCで打ち切り
00030A FB0A 2817            12          JR      Z,DL7
00030C FB0C FE30             7          CP      30H                 ;数字0〜9ならそのままArduinoへ送信してSETL処理へ
00030E FB0E 3804            12          JR      C,DL61
000310 FB10 FE3A             7          CP      3AH
000312 FB12 3811            12          JR      C,DL8
       FB14                     DL61:
000314 FB14 FE42             7          CP      42H                 ;「B」で前ページ
000316 FB16 280D            12          JR      Z,DL8
000318 FB18 FE08             7          CP      08H
00031A FB1A 2004            12          JR      NZ,DL62
00031C FB1C 3E42             7          LD      A,42H
00031E FB1E 1805            12          JR      DL8
000320 FB20 AF               4  DL62:   XOR     A                   ;それ以外で継続
000321 FB21 1802            12          JR      DL8
000323 FB23 3EFF             7  DL7:    LD      A,0FFH              ;0FFH中断コードを送信
000325 FB25 CDB3FF          17  DL8:    CALL    SNDBYTE
000328 FB28 1883            12          JR      DL1
                                        
00032A FB2A C9              10  DLRET:  RET
                                
       FB2B                     ERR:
       FB2B                     ERR_E0:
00032B FB2B FEE0             7          CP      0E0H
00032D FB2D 2005            12          JR      NZ,ERR_E1
00032F FB2F 1131FD          10          LD      DE,MSG_E0
000332 FB32 1838            12          JR      ERRMSG
000334 FB34 FEE1             7  ERR_E1: CP      0E1H
000336 FB36 2005            12          JR      NZ,ERR_E2
000338 FB38 1151FD          10          LD      DE,MSG_E1
00033B FB3B 182F            12          JR      ERRMSG
00033D FB3D FEE2             7  ERR_E2: CP      0E2H
00033F FB3F 2005            12          JR      NZ,ERR_E3
000341 FB41 116AFD          10          LD      DE,MSG_E2
000344 FB44 1826            12          JR      ERRMSG
000346 FB46 FEE3             7  ERR_E3: CP      0E3H
000348 FB48 2005            12          JR      NZ,ERR_F1
00034A FB4A 117DFD          10          LD      DE,MSG_E3
00034D FB4D 181D            12          JR      ERRMSG
00034F FB4F FEF1             7  ERR_F1: CP      0F1H
000351 FB51 2005            12          JR      NZ,ERR_F0
000353 FB53 11B1FD          10          LD      DE,MSG_F1
000356 FB56 1814            12          JR      ERRMSG
000358 FB58 FEF0             7  ERR_F0: CP      0F0H
00035A FB5A 2005            12          JR      NZ,ERR99
00035C FB5C 1197FD          10          LD      DE,MSG_F0
00035F FB5F 180B            12          JR      ERRMSG
000361 FB61 CD7910          17  ERR99:  CALL    PR2HEX
000364 FB64 3E3A             7          LD      A,':'
000366 FB66 CD2237          17          CALL    PRINT
000369 FB69 11CAFD          10          LD      DE,MSG_FF
00036C FB6C CD281D          17  ERRMSG: CALL    STRPRN
00036F FB6F CD4E37          17          CALL    CRLF
000372 FB72 C3E8FD          10          JP      CMD0
                                
                                ;************** 行参照ポインタを取得(BASIC中からの機械語ロード用) *************************
000375 FB75 ED73D4FD        20  GETCP:  LD      (WRKSP),SP
000379 FB79 2AD4FD          16          LD      HL,(WRKSP)
00037C FB7C 23               6          INC     HL
00037D FB7D 23               6          INC     HL
00037E FB7E 23               6          INC     HL
00037F FB7F 23               6          INC     HL
000380 FB80 22D4FD          16          LD      (WRKSP),HL
000383 FB83 7E               7          LD      A,(HL)
000384 FB84 32D6FD          13          LD      (WRKCP),A
000387 FB87 23               6          INC     HL
000388 FB88 7E               7          LD      A,(HL)
000389 FB89 32D7FD          13          LD      (WRKCP+1),A
                                        
00038C FB8C C9              10          RET
                                
                                ;**** ファイルネーム送信(IN:HL ファイルネームの先頭) ******
00038D FB8D 0620             7  STFS:   LD      B,20H
00038F FB8F 7E               7  STFS1:  LD      A,(HL)          ;FNAME送信
000390 FB90 CDB3FF          17          CALL    SNDBYTE
000393 FB93 23               6          INC     HL
000394 FB94 10F9            13          DJNZ    STFS1
000396 FB96 3E0D             7          LD      A,0DH
000398 FB98 CDB3FF          17          CALL    SNDBYTE
00039B FB9B CD97FF          17          CALL    RCVBYTE         ;状態取得(00H=OK)
00039E FB9E C9              10          RET
                                
       FB9F                     MSG_CMD:
00039F FB9F 434F4D4D414E4420            DB      'COMMAND FAILED!',0DH,0AH
            4641494C4544210D    
            0A                  
0003B0 FBB0 204C4D207374723A            DB      ' LM str: Load Binary',0DH,0AH
            204C6F6164204269    
            6E6172790D0A        
0003C6 FBC6 204C47207374723A            DB      ' LG str: Load Binary And Exe',0DH,0AH
            204C6F6164204269    
            6E61727920416E64    
            204578650D0A        
0003E4 FBE4 204C42207374723A            DB      ' LB str: Load Basic',0DH,0AH
            204C6F6164204261    
            7369630D0A          
0003F9 FBF9 20534D2078787878            DB      ' SM xxxx,yyyy,zzzz,str: Save Binary',0DH,0AH
            2C797979792C7A7A    
            7A7A2C7374723A20    
            536176652042696E    
            6172790D0A          
00041E FC1E 205342207374723A            DB      ' SB str: Save Basic',0DH,0AH
            2053617665204261    
            7369630D0A          
000433 FC33 205344207374723A            DB      ' SD str: SD Dir',0DH,0AH
            205344204469720D    
            0A                  
000444 FC44 20534C202020203A            DB      ' SL    : SLOT Change',0DH,0AH
            20534C4F54204368    
            616E67650D0A        
00045A FC5A 204720782020203A            DB      ' G x   : Exe Program',0DH,0AH
            204578652050726F    
            6772616D0D0A        
000470 FC70 2051206F7220423A            DB      ' Q or B: Return Basic',0DH,0AH,00H
            2052657475726E20    
            42617369630D0A00    
000488 FC88 42696E617279204C    MSG_ML: DB      'Binary Loading:',00H
            6F6164696E673A00    
000498 FC98 42696E6172792053    MSG_MS: DB      'Binary Saving:',00H
            6176696E673A00      
0004A7 FCA7 4261736963205072    MSG_BL: DB      'Basic Program Loading:',00H
            6F6772616D204C6F    
            6164696E673A00      
0004BE FCBE 4261736963205072    MSG_BS: DB      'Basic Program Saving:',00H
            6F6772616D205361    
            76696E673A00        
       FCD4                     MSG_KEY1:
0004D4 FCD4 53454C3A302D3920            DB      'SEL:0-9 NEXT:ANY BACK:B or BS BREAK:ESC',0DH,0AH,00H
            4E4558543A414E59    
            204241434B3A4220    
            6F72204253204252    
            45414B3A4553430D    
            0A00                
0004FE FCFE 4C4F4144204F6E6C    MSG_EXE:DB      'LOAD Only(0),LOAD And Execute(1)?',0DH,0AH,00H
            792830292C4C4F41    
            4420416E64204578    
            6563757465283129    
            3F0D0A00            
000522 FD22 534C4F542830292C    MSG_SLT:DB      'SLOT(0),(1)?',0DH,0AH,00H
            2831293F0D0A00      
000531 FD31 4261736963205072    MSG_E0: DB      'Basic Program Text Erea Over!',0DH,0AH,00H
            6F6772616D205465    
            7874204572656120    
            4F766572210D0A00    
000551 FD51 4261736963205072    MSG_E1: DB      'Basic Program Nothing!',0DH,0AH,00H
            6F6772616D204E6F    
            7468696E67210D0A    
            00                  
00056A FD6A 5361766520417265    MSG_E2: DB      'Save Area Error!',0DH,0AH,00H
            61204572726F7221    
            0D0A00              
00057D FD7D 4E6F74204C6F6164    MSG_E3: DB      'Not Load This EXT File!',0DH,0AH,00H
            2054686973204558    
            542046696C65210D    
            0A00                
000597 FD97 53442D4341524420    MSG_F0: DB      'SD-CARD Initialize Error!',00H
            496E697469616C69    
            7A65204572726F72    
            2100                
0005B1 FDB1 4E6F742046696E64    MSG_F1: DB      'Not Find Filename Error!',00H
            2046696C656E616D    
            65204572726F7221    
            00                  
0005CA FDCA 4572726F7200        MSG_FF: DB      'Error',00H
                                
0005D0 FDD0                     WRKST:  DS      2
0005D2 FDD2                     WRKNX:  DS      2
0005D4 FDD4                     WRKSP:  DS      2
0005D6 FDD6                     WRKCP:  DS      2
                                
                                ;**** コマンド送信 (IN:A コマンドコード)****
0005D8 FDD8 CDB3FF          17  STCD:   CALL    SNDBYTE         ;Aレジスタのコマンドコードを送信
0005DB FDDB CD97FF          17          CALL    RCVBYTE         ;状態取得(00H=OK)
0005DE FDDE C9              10          RET
                                
                                ;******************* ここから以降を上書きしなければLOAD後にGコマンドで実行可能(FDDE)
                                ;******* コマンド入力 *******************:
0005DF FDDF CD75FB          17  ST4:    CALL    GETCP
                                ;       CALL    INIT            ;SLOT0を選択,8255初期化
0005E2 FDE2 118EF9          10          LD      DE,TITLE
0005E5 FDE5 CD281D          17          CALL    STRPRN
0005E8 FDE8 CD34FE          17  CMD0:   CALL    LINPUT
0005EB FDEB 2180FE          10          LD      HL,BUFF
0005EE FDEE 7E               7          LD      A,(HL)
0005EF FDEF 23               6          INC     HL
0005F0 FDF0 FE4C             7          CP      'L'
0005F2 FDF2 2012            12          JR      NZ,CMD1
0005F4 FDF4 7E               7          LD      A,(HL)
0005F5 FDF5 FE4D             7          CP      'M'             ;LMコマンド
0005F7 FDF7 CA6DFF          10          JP      Z,MLOAD
0005FA FDFA FE42             7          CP      'B'             ;LBコマンド
0005FC FDFC CAADF9          10          JP      Z,BLOAD
0005FF FDFF FE47             7          CP      'G'             ;LGコマンド
000601 FE01 CA81FF          10          JP      Z,MEXE
000604 FE04 181B            12          JR      CMD9
000606 FE06 FE53             7  CMD1:   CP      'S'
000608 FE08 2017            12          JR      NZ,CMD9
00060A FE0A 7E               7          LD      A,(HL)
00060B FE0B FE4D             7          CP      'M'             ;SMコマンド
00060D FE0D CA09F8          10          JP      Z,MSAVE
000610 FE10 FE42             7          CP      'B'             ;SBコマンド
000612 FE12 CA96F8          10          JP      Z,BSAVE
000615 FE15 FE44             7          CP      'D'             ;SDコマンド
000617 FE17 CA61FA          10          JP      Z,SDIR
00061A FE1A FE4C             7          CP      'L'             ;SLコマンド
00061C FE1C CA27F9          10          JP      Z,SLOT
00061F FE1F 180B            12          JR      CMDERR
000621 FE21 FE51             7  CMD9:   CP      'Q'             ;Qコマンド
000623 FE23 C8              11          RET     Z
000624 FE24 FE42             7          CP      'B'             ;Bコマンド
000626 FE26 C8              11          RET     Z
000627 FE27 FE47             7          CP      'G'             ;Gコマンド
000629 FE29 CADBFE          10          JP      Z,EXECUTE
00062C FE2C 119FFB          10  CMDERR: LD      DE,MSG_CMD      ;コマンドエラーMSG
00062F FE2F CD281D          17          CALL    STRPRN
000632 FE32 18B4            12          JR      CMD0
                                
                                ;******** 1行入力ルーチン ***********************
                                ;              BS,カーソル右キーによる文字訂正のみ有効
       FE34                     LINPUT:
000634 FE34 117EFE          10          LD      DE,PRMPT
000637 FE37 CD281D          17          CALL    STRPRN
00063A FE3A 2180FE          10          LD      HL,BUFF
00063D FE3D CDCB10          17  LI2:    CALL    KINPUT          ;1文字入力
000640 FE40 F5              11          PUSH    AF
000641 FE41 CD2237          17          CALL    PRINT           ;入力文字表示
000644 FE44 F1              10          POP     AF
000645 FE45 FE0D             7          CP      0DH             ;改行なら終了
000647 FE47 2822            12          JR      Z,LEND
000649 FE49 FE1D             7          CP      1DH             ;カーソル左処理
00064B FE4B 200D            12          JR      NZ,LI4
00064D FE4D 2B               6  LI3:    DEC     HL
00064E FE4E 3E20             7          LD      A,' '           ;カーソル位置の文字を空白に置き換え
000650 FE50 CD2237          17          CALL    PRINT
000653 FE53 3E1D             7          LD      A,1DH           ;もう一回カーソル左
000655 FE55 CD2237          17          CALL    PRINT
000658 FE58 18E3            12          JR      LI2
00065A FE5A FE08             7  LI4:    CP      08H             ;BS処理
00065C FE5C 2002            12          JR      NZ,LI5
00065E FE5E 18ED            12          JR      LI3             ;カーソル左と同様に処理
000660 FE60 FE20             7  LI5:    CP      20H             ;コントロール文字ならBUFFに書き込まない
000662 FE62 38D9            12          JR      C,LI2
000664 FE64 CD71FE          17          CALL    LICHK
000667 FE67 77               7          LD      (HL),A
000668 FE68 23               6          INC     HL
000669 FE69 18D2            12          JR      LI2
00066B FE6B AF               4  LEND:   XOR     A               ;0DHを00Hに置き換えて終了
00066C FE6C CD71FE          17          CALL    LICHK
00066F FE6F 77               7          LD      (HL),A
000670 FE70 C9              10          RET
000671 FE71 EB               4  LICHK:  EX      DE,HL           ;カーソル左、BS処理でBUFF先頭を超えては戻らないようにチェック
000672 FE72 2180FE          10          LD      HL,BUFF
000675 FE75 ED52            15          SBC     HL,DE
000677 FE77 3803            12          JR      C,LICHK1
000679 FE79 1180FE          10          LD      DE,BUFF
00067C FE7C EB               4  LICHK1: EX      DE,HL
00067D FE7D C9              10          RET
                                
00067E FE7E 3E00                PRMPT:  DB      '>',00H
000680 FE80                     BUFF:   DS      80
                                
                                ;****** FILE NAMEが取得できるまでスペースを読み飛ばし (IN:HL コマンド文字の次の文字 OUT:HL ファイルネームの先頭)*********
0006D0 FED0 F5              11  STFN:   PUSH    AF
0006D1 FED1 7E               7  STFN1:  LD      A,(HL)
0006D2 FED2 FE20             7          CP      20H
0006D4 FED4 2003            12          JR      NZ,STFN3
0006D6 FED6 23               6          INC     HL              ;ファイルネームまでスペース読み飛ばし
0006D7 FED7 18F8            12          JR      STFN1
0006D9 FED9 F1              10  STFN3:  POP     AF
0006DA FEDA C9              10          RET
                                
                                ;*********** Gコマンド(16進数4桁のアドレスへJUMP) ***********************
       FEDB                     EXECUTE:
0006DB FEDB CDD0FE          17          CALL    STFN            ;SPACE読み飛ばし
0006DE FEDE 7E               7          LD      A,(HL)          ;アドレス指定がなかったらWRKEXの示すアドレスで実行
0006DF FEDF A7               4          AND     A
0006E0 FEE0 2004            12          JR      NZ,EXE1
0006E2 FEE2 2A8CFF          16          LD      HL,(WRKEX)
0006E5 FEE5 E9               4          JP      (HL)
0006E6 FEE6 EB               4  EXE1:   EX      DE,HL
0006E7 FEE7 CD3B10          17          CALL    STR2HEX         ;HL <- (DE)からの文字列を16進数4桁
0006EA FEEA E9               4          JP      (HL)
                                
                                ;********* 機械語ロード本体 ********************************
       FEEB                     ML1:
0006EB FEEB 23               6          INC     HL
0006EC FEEC 3E17             7          LD      A,17H           ;LOADコマンド17H
0006EE FEEE CDD8FD          17          CALL    STCD            ;コマンドコード送信
0006F1 FEF1 A7               4          AND     A               ;00以外ならERROR
0006F2 FEF2 C0              11          RET     NZ
0006F3 FEF3 CDD0FE          17          CALL    STFN            ;SPACE読み飛ばし
0006F6 FEF6 E5              11          PUSH    HL
0006F7 FEF7 CD8DFB          17          CALL    STFS            ;ファイルネーム送信
0006FA FEFA E1              10          POP     HL
0006FB FEFB A7               4          AND     A               ;00以外ならERROR
0006FC FEFC C0              11          RET     NZ
0006FD FEFD 1188FC          10  ML4:    LD      DE,MSG_ML       ;Loadingメッセージ
000700 FF00 CD281D          17          CALL    STRPRN
000703 FF03 EB               4          EX      DE,HL
000704 FF04 CD281D          17          CALL    STRPRN          ;ファイルネーム表示
000707 FF07 CD4E37          17          CALL    CRLF
                                
00070A FF0A CD97FF          17          CALL    RCVBYTE         ;ファイル長受信
00070D FF0D 5F               4          LD      E,A
00070E FF0E CD97FF          17          CALL    RCVBYTE
000711 FF11 57               4          LD      D,A
                                        
000712 FF12 3E28             7          LD      A,'('
000714 FF14 CD2237          17          CALL    PRINT
000717 FF17 CD97FF          17          CALL    RCVBYTE         ;開始アドレス受信
00071A FF1A 6F               4          LD      L,A
00071B FF1B CD97FF          17          CALL    RCVBYTE
00071E FF1E 67               4          LD      H,A
00071F FF1F 7C               4          LD      A,H
000720 FF20 CD7910          17          CALL    PR2HEX
000723 FF23 7D               4          LD      A,L
000724 FF24 CD7910          17          CALL    PR2HEX
000727 FF27 E5              11          PUSH    HL
000728 FF28 19              11          ADD     HL,DE
000729 FF29 2B               6          DEC     HL
00072A FF2A 3E2C             7          LD      A,','
00072C FF2C CD2237          17          CALL    PRINT
00072F FF2F 7C               4          LD      A,H
000730 FF30 CD7910          17          CALL    PR2HEX
000733 FF33 7D               4          LD      A,L
000734 FF34 CD7910          17          CALL    PR2HEX
000737 FF37 E1              10          POP     HL
000738 FF38 3E2C             7          LD      A,','
00073A FF3A CD2237          17          CALL    PRINT
00073D FF3D CD97FF          17          CALL    RCVBYTE         ;EXECUTEアドレス受信
000740 FF40 328CFF          13          LD      (WRKEX),A
000743 FF43 CD97FF          17          CALL    RCVBYTE
000746 FF46 328DFF          13          LD      (WRKEX+1),A
000749 FF49 CD7910          17          CALL    PR2HEX
00074C FF4C 3A8CFF          13          LD      A,(WRKEX)
00074F FF4F CD7910          17          CALL    PR2HEX
                                
000752 FF52 3E29             7          LD      A,')'
000754 FF54 CD2237          17          CALL    PRINT
000757 FF57 CD4E37          17          CALL    CRLF
                                
                                ;******************* ここから以降を上書きしなければLGコマンドでロード実行可能(FF59)
       FF5A                     ML2:    
00075A FF5A CD97FF          17          CALL    RCVBYTE         ;データ受信
00075D FF5D 77               7          LD      (HL),A
00075E FF5E 23               6          INC     HL
00075F FF5F 1B               6          DEC     DE
000760 FF60 7B               4          LD      A,E
000761 FF61 CD8EFF          17          CALL    PRTDOT
000764 FF64 7B               4          LD      A,E
000765 FF65 B2               4          OR      D
000766 FF66 20F2            12          JR      NZ,ML2          ;ファイル長分をループ
000768 FF68 CD4E37          17          CALL    CRLF
00076B FF6B AF               4          XOR     A
00076C FF6C C9              10          RET
                                
                                ;*********** LMコマンド(機械語プログラムのLOAD) ***********************
       FF6D                     MLOAD:
00076D FF6D CDEBFE          17          CALL    ML1
000770 FF70 A7               4          AND     A
000771 FF71 C22BFB          10          JP      NZ,ERR
                                
                                #if SDF8 == 1
000774 FF74 11DFFD          10          LD      DE,ST4          ;SDF8限定:LOAD最終番地(HL)がST4(DE)より大きければ
                                                                ;         CMD0に戻っても無意味なので実行番地から実行
000777 FF77 AF               4          XOR     A
000778 FF78 ED52            15          SBC     HL,DE
00077A FF7A 3802            12          JR      C,ML5
00077C FF7C 180A            12          JR      ML6
                                #endif
00077E FF7E C3E8FD          10  ML5:    JP      CMD0
                                
                                ;********** LGコマンド(機械語プログラムのLOAD、実行番地へのJUMP) ****************
       FF81                     MEXE:
000781 FF81 CDEBFE          17          CALL    ML1
000784 FF84 A7               4          AND     A
000785 FF85 C22BFB          10          JP      NZ,ERR
000788 FF88 2A8CFF          16  ML6:    LD      HL,(WRKEX)
00078B FF8B E9               4          JP      (HL)
                                
00078C FF8C                     WRKEX:  DS      2
                                
                                ;************* SAVE、LOAD 進行状況用DOT表示 **********************
00078E FF8E A7               4  PRTDOT: AND     A
00078F FF8F 2005            12          JR      NZ,PD1
000791 FF91 3E2E             7          LD      A,'.'
000793 FF93 CD2237          17          CALL    PRINT
000796 FF96 C9              10  PD1:    RET
                                
                                ;**** 1BYTE受信 ****
                                ;受信DATAをAレジスタにセットしてリターン
       FF97                     RCVBYTE:
000797 FF97 CDEAFF          17          CALL    F1CHK           ;PORTC BIT7が1になるまでLOOP
00079A FF9A 0101E0          10          LD      BC,PPI_B
00079D FF9D ED78            12          IN      A,(C)           ;PORTB -> A
00079F FF9F F5              11          PUSH    AF
0007A0 FFA0 3E05             7          LD      A,05H
0007A2 FFA2 0103E0          10          LD      BC,PPI_R
0007A5 FFA5 ED79            12          OUT     (C),A           ;PORTC BIT2 <- 1
0007A7 FFA7 CDE0FF          17          CALL    F2CHK           ;PORTC BIT7が0になるまでLOOP
0007AA FFAA 3E04             7          LD      A,04H
0007AC FFAC 0103E0          10          LD      BC,PPI_R
0007AF FFAF ED79            12          OUT     (C),A           ;PORTC BIT2 <- 0
0007B1 FFB1 F1              10          POP     AF
0007B2 FFB2 C9              10          RET
                                
                                ;**** 1BYTE送信 ****
                                ;Aレジスタの内容をPORTA下位4BITに4BITずつ送信
       FFB3                     SNDBYTE:
0007B3 FFB3 C5              11          PUSH    BC
0007B4 FFB4 F5              11          PUSH    AF
0007B5 FFB5 1F               4          RRA
0007B6 FFB6 1F               4          RRA
0007B7 FFB7 1F               4          RRA
0007B8 FFB8 1F               4          RRA
0007B9 FFB9 E60F             7          AND     0FH
0007BB FFBB CDC6FF          17          CALL    SND4BIT
0007BE FFBE F1              10          POP     AF
0007BF FFBF E60F             7          AND     0FH
0007C1 FFC1 CDC6FF          17          CALL    SND4BIT
0007C4 FFC4 C1              10          POP     BC
0007C5 FFC5 C9              10          RET
                                
                                ;**** 4BIT送信 ****
                                ;Aレジスタ下位4ビットを送信する
       FFC6                     SND4BIT:
0007C6 FFC6 0100E0          10          LD      BC,PPI_A
0007C9 FFC9 ED79            12          OUT     (C),A
0007CB FFCB 3E05             7          LD      A,05H
0007CD FFCD 0103E0          10          LD      BC,PPI_R
0007D0 FFD0 ED79            12          OUT     (C),A           ;PORTC BIT2 <- 1
0007D2 FFD2 CDEAFF          17          CALL    F1CHK           ;PORTC BIT7が1になるまでLOOP
0007D5 FFD5 3E04             7          LD      A,04H
0007D7 FFD7 0103E0          10          LD      BC,PPI_R
0007DA FFDA ED79            12          OUT     (C),A           ;PORTC BIT2 <- 0
0007DC FFDC CDE0FF          17          CALL    F2CHK
0007DF FFDF C9              10          RET
                                
                                ;**** BUSYをCHECK(0) ****
                                ; E002H BIT7が0になるまでLOOP
0007E0 FFE0 0102E0          10  F2CHK:  LD      BC,PPI_C
0007E3 FFE3 ED78            12          IN      A,(C)
0007E5 FFE5 E680             7          AND     80H             ;PORTC BIT7 = 0?
0007E7 FFE7 20F7            12          JR      NZ,F2CHK
0007E9 FFE9 C9              10          RET
                                
                                ;**** BUSYをCHECK(1) ****
                                ; E002H BIT7が1になるまでLOP
0007EA FFEA 0102E0          10  F1CHK:  LD      BC,PPI_C
0007ED FFED ED78            12          IN      A,(C)
0007EF FFEF E680             7          AND     80H             ;PORTC BIT7 = 1?
0007F1 FFF1 28F7            12          JR      Z,F1CHK
0007F3 FFF3 C9              10          RET
                                
                                        END
[EOF:BOOT.S:SHIFT_JIS]
