                                ;*** AILZ80ASM *** Z-80 Assembler, version 1.0.28.0, LST:Full:4
                                ;2025/7/11  条件付きアセンブルを導入
                                ;           SDコマンド時、SDコマンドでF9A9hを超えて機械語プログラムをLOADした時の挙動にバグがあったので修正。
                                ;           FDDAhを超えるLOADの場合は強制的に実行番地へジャンプすることに修正。
                                ;2025/7/13  BASICプログラムLOAD時のAREA OVERエラー表示のバグを修正。
                                
       0001                     SDF8        EQU     1           ;1=ORG F800H,0=ORG E800H
       0703                     KRNGC       EQU     0703H       ;キー入力バッファクリア,クリアしてからGETRGを実行することでキースキャンを実現できる
       070F                     GETRG       EQU     070FH       ;キー入力バッファからデータを取り出す A <- DATA Z=0:データあり,1:なし
       074F                     PRCRT       EQU     074FH       ;1文字表示 A<-DATA,コントロールコード動作
       0753                     CTPRN       EQU     0753H       ;1文字表示 A<-DATA,コントロール文字を表示
       07A4                     XCSR        EQU     07A4H       ;カーソル移動 9FD7H<-X座標,9FD8H<-Y座標
       0A73                     XMTON       EQU     0A73H       ;CMTのリモートスイッチON
       0A78                     XMTOFF      EQU     0A78H       ;CMTのリモートスイッチをOFF
       0A91                     XMTMD       EQU     0A91H       ;CMTのボーレートを指定 A<-00:1200,01:300
       0A9A                     XMTSY       EQU     0A9AH       ;CMTにREAD動作の開始を指示する
       0AA2                     XMTRD       EQU     0AA2H       ;CMTから1Byte読み取る B<-DATA,C<-状態
       0AB5                     XMTWR       EQU     0AB5H       ;CMTに1Byte出力 A<-DATA
       0AE0                     XMTFF       EQU     0AE0H       ;CMT関連 12bitのALL1を出力?
       103B                     STR2HEX     EQU     103BH       ;(DE)からの4文字を16進数4桁にしてHLへ,ERRORでBASICに復帰
       1079                     PR2HEX      EQU     1079H       ;Aレジスタの内容を16進数2桁で表示
       10CB                     KINPUT      EQU     10CBH       ;1文字入力(WAIT)
       280C                     NEWCMD      EQU     280CH       ;NEW処理
       3722                     PRINT       EQU     3722H       ;1文字出力
       374E                     CRLF        EQU     374EH       ;CRLF出力
       1D28                     STRPRN      EQU     1D28H       ;文字列表示 DE <- 先頭アドレス 終端は00H
       9DC7                     PROGPNT     EQU     9DC7H       ;9DC7H〜9DE5HまでPROGポインタ
                                ;                                 (PROGPNT+0:PROG番号,PROGPNT+1:BASICテキスト開始アドレス)x10個分
                                ;                                 使っていないPROGポインタの先頭にはFFhを書き込み
       9DE6                     BASICST     EQU     9DE6H       ;BASICテキスト開始番地
       9DEA                     BASICEND    EQU     9DEAH       ;BASICテキスト最終番地+1
       9E06                     NOWPROG     EQU     9E06H       ;現在PROG番号
       9E68                     TEXTEND     EQU     9E68H       ;BASICテキストエリア最終番地+1
                                
                                ;0605H〜067BH RS-232C関連
                                ;0605H
                                ;0629H
                                ;0636H
                                ;064EH
                                
       FFA0                     CPUSEL      EQU     0FFA0H
       FF00                     IOSEL       EQU     0FF00H
                                
       E000                     PPI_A       EQU     0E000H
       E001                     PPI_B       EQU     PPI_A+1
       E002                     PPI_C       EQU     PPI_A+2
       E003                     PPI_R       EQU     PPI_A+3
                                
                                ;0E000H PORTA 送信データ(下位4ビット)
                                ;0E001H PORTB 受信データ(8ビット)
                                ;
                                ;0E002H PORTC Bit
                                ;7 IN  CHK
                                ;6 IN
                                ;5 IN
                                ;4 IN 
                                ;3 OUT
                                ;2 OUT FLG
                                ;1 OUT
                                ;0 OUT
                                ;
                                ;0E003H コントロールレジスタ
                                
                                
                                #if SDF8 == 1
000000 F800                             ORG     0F800H
                                #else
                                        ORG     0E800H
                                #endif
                                
000000 F800 C3DCFD          10  START:  JP      ST4
000003 F803 C33DFA          10  ST2:    JP      BCALL
000006 F806 C34AF9          10  ST3:    JP      INIT1
                                
                                ;*********** SMコマンド(機械語プログラムのSAVE) ******************************
       F809                     MSAVE:
000009 F809 23               6          INC     HL
00000A F80A CDCDFE          17          CALL    STFN            ;SPACE読み飛ばし
00000D F80D EB               4          EX      DE,HL
00000E F80E CD3B10          17          CALL    STR2HEX         ;セーブ開始アドレス変換
000011 F811 22CDFD          16          LD      (WRKST),HL
000014 F814 13               6          INC     DE
000015 F815 CD3B10          17          CALL    STR2HEX         ;セーブ終了アドレス変換
000018 F818 22CFFD          16          LD      (WRKNX),HL
00001B F81B 13               6          INC     DE
00001C F81C CD3B10          17          CALL    STR2HEX         ;実行開始アドレス変換
00001F F81F 228EFF          16          LD      (WRKEX),HL
000022 F822 13               6          INC     DE
000023 F823 D5              11          PUSH    DE
                                        
000024 F824 2ACDFD          16          LD      HL,(WRKST)      ;セーブ終了がセーブ開始より大きくなければエラー
000027 F827 ED5BCFFD        20          LD      DE,(WRKNX)
00002B F82B AF               4          XOR     A
00002C F82C ED52            15          SBC     HL,DE
00002E F82E E1              10          POP     HL
00002F F82F 3EE2             7          LD      A,0E2H          ;ERRMSG
000031 F831 D228FB          10          JP      NC,ERR
                                
000034 F834 3E13             7          LD      A,13H           ;LOADコマンド13H
000036 F836 CDD5FD          17          CALL    STCD            ;コマンドコード送信
000039 F839 A7               4          AND     A               ;00以外ならERROR
00003A F83A C228FB          10          JP      NZ,ERR
                                
00003D F83D E5              11          PUSH    HL
00003E F83E CD8AFB          17          CALL    STFS            ;ファイルネーム送信
000041 F841 E1              10          POP     HL
000042 F842 A7               4          AND     A               ;00以外ならERROR
000043 F843 C228FB          10          JP      NZ,ERR
000046 F846 1195FC          10          LD      DE,MSG_MS       ;Savingメッセージ
000049 F849 CD281D          17          CALL    STRPRN
00004C F84C EB               4          EX      DE,HL
00004D F84D CD281D          17          CALL    STRPRN          ;ファイルネーム表示
000050 F850 CD4E37          17          CALL    CRLF
000053 F853 3ACFFD          13          LD      A,(WRKNX)       ;セーブ終了アドレス送信:ファイル長はArduino側で計算
000056 F856 CDB5FF          17          CALL    SNDBYTE
000059 F859 3AD0FD          13          LD      A,(WRKNX+1)
00005C F85C CDB5FF          17          CALL    SNDBYTE
00005F F85F 3ACDFD          13          LD      A,(WRKST)       ;セーブ開始アドレス送信
000062 F862 CDB5FF          17          CALL    SNDBYTE
000065 F865 3ACEFD          13          LD      A,(WRKST+1)
000068 F868 CDB5FF          17          CALL    SNDBYTE
00006B F86B 3A8EFF          13          LD      A,(WRKEX)       ;実行開始アドレス送信
00006E F86E CDB5FF          17          CALL    SNDBYTE
000071 F871 3A8FFF          13          LD      A,(WRKEX+1)
000074 F874 CDB5FF          17          CALL    SNDBYTE
                                        
000077 F877 2ACDFD          16          LD      HL,(WRKST)      ;セーブ開始アドレス
00007A F87A ED5BCFFD        20          LD      DE,(WRKNX)      ;セーブ終了アドレス
00007E F87E 7E               7  MS1:    LD      A,(HL)
00007F F87F CDB5FF          17          CALL    SNDBYTE
000082 F882 7D               4          LD      A,L
000083 F883 CD90FF          17          CALL    PRTDOT
000086 F886 AF               4          XOR     A
000087 F887 E5              11          PUSH    HL
000088 F888 ED52            15          SBC     HL,DE
00008A F88A E1              10          POP     HL
00008B F88B 2803            12          JR      Z,MS2
00008D F88D 23               6          INC     HL
00008E F88E 18EE            12          JR      MS1             ;セーブ終了アドレスまでループ
                                        
000090 F890 CD4E37          17  MS2:    CALL    CRLF
000093 F893 C3E5FD          10          JP      CMD0
                                
                                ;************* SBコマンド(BASICプログラムのSAVE) **************************
       F896                     BSAVE:
000096 F896 23               6          INC     HL
000097 F897 3E14             7          LD      A,14H           ;LOADコマンド14H
000099 F899 CDD5FD          17          CALL    STCD            ;コマンドコード送信
00009C F89C A7               4          AND     A               ;00以外ならERROR
00009D F89D C228FB          10          JP      NZ,ERR
                                
0000A0 F8A0 CDCDFE          17          CALL    STFN            ;SPACE読み飛ばし
0000A3 F8A3 E5              11          PUSH    HL
0000A4 F8A4 CD8AFB          17          CALL    STFS            ;ファイルネーム送信
0000A7 F8A7 E1              10          POP     HL
0000A8 F8A8 A7               4          AND     A               ;00以外ならERROR
0000A9 F8A9 C228FB          10          JP      NZ,ERR
0000AC F8AC 11BBFC          10          LD      DE,MSG_BS       ;Loadingメッセージ
0000AF F8AF CD281D          17          CALL    STRPRN
0000B2 F8B2 EB               4          EX      DE,HL
0000B3 F8B3 CD281D          17          CALL    STRPRN          ;ファイルネーム表示
0000B6 F8B6 CD4E37          17          CALL    CRLF
                                
0000B9 F8B9 3A069E          13          LD      A,(NOWPROG)     ;B <- 現在PROG番号
0000BC F8BC 47               4          LD      B,A
                                        
0000BD F8BD 21C79D          10          LD      HL,PROGPNT      ;現在PROG番号と一致するPROGポインタを検索
0000C0 F8C0 7E               7  BS0:    LD      A,(HL)
0000C1 F8C1 B8               4          CP      B
0000C2 F8C2 2809            12          JR      Z,BS1
0000C4 F8C4 FEFF             7          CP      0FFH            ;現在PROG番号と一致せずにFFHが出現する場合はBASICプログラム無し
0000C6 F8C6 2857            12          JR      Z,BSERR
0000C8 F8C8 23               6          INC     HL
0000C9 F8C9 23               6          INC     HL
0000CA F8CA 23               6          INC     HL
0000CB F8CB 18F3            12          JR      BS0
       F8CD                     BS1:
0000CD F8CD 23               6          INC     HL
0000CE F8CE 7E               7          LD      A,(HL)          ;一致したPROGポインタから開始アドレスを取得
0000CF F8CF 32CDFD          13          LD      (WRKST),A
0000D2 F8D2 23               6          INC     HL
0000D3 F8D3 7E               7          LD      A,(HL)
0000D4 F8D4 32CEFD          13          LD      (WRKST+1),A
0000D7 F8D7 23               6          INC     HL
0000D8 F8D8 7E               7          LD      A,(HL)
0000D9 F8D9 FEFF             7          CP      0FFH            ;次のPROGが無し、BASICENDから終了アドレスを取得
0000DB F8DB 280C            12          JR      Z,BS2
0000DD F8DD 23               6          INC     HL
0000DE F8DE 7E               7          LD      A,(HL)          ;次のPROG有り、次のPROG開始アドレスを終了アドレスとして取得
0000DF F8DF 32CFFD          13          LD      (WRKNX),A
0000E2 F8E2 23               6          INC     HL
0000E3 F8E3 7E               7          LD      A,(HL)
0000E4 F8E4 32D0FD          13          LD      (WRKNX+1),A
0000E7 F8E7 180C            12          JR      BS3
0000E9 F8E9 3AEA9D          13  BS2:    LD      A,(BASICEND)    ;BASICENDを終了アドレスとして取得
0000EC F8EC 32CFFD          13          LD      (WRKNX),A
0000EF F8EF 3AEB9D          13          LD      A,(BASICEND+1)
0000F2 F8F2 32D0FD          13          LD      (WRKNX+1),A
0000F5 F8F5 2ACFFD          16  BS3:    LD      HL,(WRKNX)
0000F8 F8F8 ED5BCDFD        20          LD      DE,(WRKST)      ;ファイル長を計算してDEへ
0000FC F8FC AF               4          XOR     A
0000FD F8FD ED52            15          SBC     HL,DE
                                
0000FF F8FF 7D               4          LD      A,L             ;ファイル長送信:L
000100 F900 CDB5FF          17          CALL    SNDBYTE
000103 F903 7C               4          LD      A,H             ;ファイル長送信:H
000104 F904 CDB5FF          17          CALL    SNDBYTE
                                        
000107 F907 EB               4          EX      DE,HL
000108 F908 2ACDFD          16          LD      HL,(WRKST)      ;開始アドレス:HL、ファイル長:DE
                                        
       F90B                     BS4:    
00010B F90B 7E               7          LD      A,(HL)          ;実データ送信
00010C F90C CDB5FF          17          CALL    SNDBYTE
00010F F90F 23               6          INC     HL
000110 F910 1B               6          DEC     DE
000111 F911 7B               4          LD      A,E
000112 F912 CD90FF          17          CALL    PRTDOT
000115 F915 7B               4          LD      A,E
000116 F916 B2               4          OR      D
000117 F917 20F2            12          JR      NZ,BS4
                                
000119 F919 CD4E37          17          CALL    CRLF
00011C F91C C3E5FD          10          JP      CMD0
                                
       F91F                     BSERR:
00011F F91F 3EE1             7          LD      A,0E1H          ;BASIC PROGRAM無しエラーを表示
000121 F921 C328FB          10          JP      ERR
                                
                                ;*********** SLコマンド(SLOT切り替え) ****************
       F924                     SLOT:
000124 F924 111FFD          10          LD      DE,MSG_SLT      ;SLOT 0 or 1
000127 F927 CD281D          17          CALL    STRPRN
00012A F92A 2151F9          10          LD      HL,SDON+1
00012D F92D CDCB10          17  SLT1:   CALL    KINPUT          ;1文字入力
000130 F930 FE30             7          CP      '0'
000132 F932 2008            12          JR      NZ,SLT2
000134 F934 3600            10          LD      (HL),00H        ;(SDON+1) <- 00H
000136 F936 CD50F9          17          CALL    INIT
000139 F939 C3E5FD          10          JP      CMD0
00013C F93C FE31             7  SLT2:   CP      '1'
00013E F93E 2008            12          JR      NZ,SLT3
000140 F940 3601            10          LD      (HL),01H        ;(SDON+1) <- 01H
000142 F942 CD50F9          17          CALL    INIT            ;初期化再実行
000145 F945 C3E5FD          10          JP      CMD0
000148 F948 18E3            12  SLT3:   JR      SLT1            ;0,1以外なら再入力
                                
                                ;*************** FP-1100_SD初期化 *************************
       F94A                     INIT1:
00014A F94A 116FF9          10          LD      DE,MSG_INIT
00014D F94D CD281D          17          CALL    STRPRN
                                        
                                ;**** SLOT SELECT ****
       F950                     INIT:
000150 F950 3E00             7  SDON:   LD      A,00H           ;SLOT0を選択
000152 F952 01A0FF          10          LD      BC,0FFA0H
000155 F955 E601             7          AND     01H
000157 F957 F602             7          OR      02H
000159 F959 ED79            12          OUT     (C),A
                                
                                ;**** 8255初期化 ****
                                ;PORTC下位BITをOUTPUT、上位BITをINPUT、PORTBをINPUT、PORTAをOUTPUT
00015B F95B 3E8A             7          LD      A,8AH
00015D F95D 0103E0          10          LD      BC,PPI_R
000160 F960 ED79            12          OUT     (C),A
                                ;出力BITをリセット
000162 F962 3E00             7  INIT2:  LD      A,00H           ;PORTA <- 0
000164 F964 0100E0          10          LD      BC,PPI_A
000167 F967 ED79            12          OUT     (C),A
000169 F969 0102E0          10          LD      BC,PPI_C
00016C F96C ED79            12          OUT     (C),A           ;PORTC <- 0
00016E F96E C9              10          RET
                                
       F96F                     MSG_INIT:
00016F F96F 46502D313130305F            DB      'FP-1100_SD Initialize Ok!',0DH,0AH,00H
            534420496E697469    
            616C697A65204F6B    
            210D0A00            
00018B F98B 2A2A2A2A2A2A2A2A    TITLE:  DB      '******** FP-1100_SD ********',0DH,0AH,00H
            2046502D31313030    
            5F5344202A2A2A2A    
            2A2A2A2A0D0A00      
                                
                                ;******************* ここから以降を上書きしなければLM,LB,SD等プログラムのLOADは使用可能(F9AA)
                                ;***************** LBコマンド(BASICプログラムのLOAD) **************************
                                ; 現在PROGをNEW処理した後に新たに未使用PROGポインタを使用してLOAD
       F9AA                     BLOAD:
0001AA F9AA 23               6          INC     HL
0001AB F9AB 3E18             7          LD      A,18H           ;LOADコマンド18H
0001AD F9AD CDD5FD          17          CALL    STCD            ;コマンドコード送信
0001B0 F9B0 A7               4          AND     A               ;00以外ならERROR
0001B1 F9B1 C228FB          10          JP      NZ,ERR
                                
0001B4 F9B4 CDCDFE          17          CALL    STFN            ;SPACE読み飛ばし
0001B7 F9B7 E5              11          PUSH    HL
0001B8 F9B8 CD8AFB          17          CALL    STFS            ;ファイルネーム送信
0001BB F9BB E1              10          POP     HL
0001BC F9BC A7               4          AND     A               ;00以外ならERROR
0001BD F9BD C228FB          10          JP      NZ,ERR
0001C0 F9C0 11A4FC          10          LD      DE,MSG_BL       ;Loadingメッセージ
0001C3 F9C3 CD281D          17          CALL    STRPRN
0001C6 F9C6 EB               4          EX      DE,HL
0001C7 F9C7 CD281D          17          CALL    STRPRN          ;ファイルネーム表示
0001CA F9CA CD4E37          17          CALL    CRLF
                                
0001CD F9CD CD0C28          17          CALL    NEWCMD          ;NEW処理
0001D0 F9D0 CD99FF          17          CALL    RCVBYTE         ;ファイル長受信
0001D3 F9D3 5F               4          LD      E,A
0001D4 F9D4 CD99FF          17          CALL    RCVBYTE
0001D7 F9D7 57               4          LD      D,A
                                        
0001D8 F9D8 2AEA9D          16          LD      HL,(BASICEND)   ;BASICプログラムがRAMENDを超えないかチェック
0001DB F9DB 19              11          ADD     HL,DE
0001DC F9DC ED4B689E        20          LD      BC,(TEXTEND)
0001E0 F9E0 AF               4          XOR     A
0001E1 F9E1 ED42            15          SBC     HL,BC
0001E3 F9E3 304E            12          JR      NC,BLERR        ;超えるようであれば処理打ち切り
0001E5 F9E5 2AEA9D          16          LD      HL,(BASICEND)
0001E8 F9E8 AF               4          XOR     A
0001E9 F9E9 CDB5FF          17          CALL    SNDBYTE         ;処理継続指示
                                
       F9EC                     BL2:    
0001EC F9EC CD99FF          17          CALL    RCVBYTE         ;データ受信
0001EF F9EF 77               7          LD      (HL),A
0001F0 F9F0 23               6          INC     HL
0001F1 F9F1 1B               6          DEC     DE
0001F2 F9F2 7B               4          LD      A,E
0001F3 F9F3 CD90FF          17          CALL    PRTDOT
0001F6 F9F6 7B               4          LD      A,E
0001F7 F9F7 B2               4          OR      D
0001F8 F9F8 20F2            12          JR      NZ,BL2          ;ファイル長分をループ
0001FA F9FA CD4E37          17          CALL    CRLF
0001FD F9FD AF               4          XOR     A
0001FE F9FE 77               7          LD      (HL),A          ;最後にENDマーク書き込み
                                        
0001FF F9FF E5              11          PUSH    HL
000200 FA00 11C79D          10          LD      DE,PROGPNT      ;未使用PROGポインタを検索
000203 FA03 1A               7  BL0:    LD      A,(DE)
000204 FA04 FEFF             7          CP      0FFH
000206 FA06 2805            12          JR      Z,BL1
000208 FA08 13               6          INC     DE
000209 FA09 13               6          INC     DE
00020A FA0A 13               6          INC     DE
00020B FA0B 18F6            12          JR      BL0
00020D FA0D 21069E          10  BL1:    LD      HL,NOWPROG      ;未使用PROGポインタに現在PROG番号を設定
000210 FA10 7E               7          LD      A,(HL)
000211 FA11 12               7          LD      (DE),A
000212 FA12 21EA9D          10          LD      HL,BASICEND     ;現在PROGの先頭アドレスをセット
000215 FA15 7E               7          LD      A,(HL)
000216 FA16 13               6          INC     DE
000217 FA17 12               7          LD      (DE),A
000218 FA18 23               6          INC     HL
000219 FA19 13               6          INC     DE
00021A FA1A 7E               7          LD      A,(HL)
00021B FA1B 12               7          LD      (DE),A
00021C FA1C 13               6          INC     DE
00021D FA1D 3EFF             7          LD      A,0FFH          ;次のPROGポインタに未使用フラグをセット
00021F FA1F 12               7          LD      (DE),A
000220 FA20 E1              10          POP     HL
                                        
000221 FA21 22EA9D          16          LD      (BASICEND),HL   ;BASICテキスト最終アドレス+1をセット
000224 FA24 22EC9D          16          LD      (BASICEND+2),HL
000227 FA27 22EE9D          16          LD      (BASICEND+4),HL
00022A FA2A 22F09D          16          LD      (BASICEND+6),HL
00022D FA2D 22F29D          16          LD      (BASICEND+8),HL
                                        
000230 FA30 C3E5FD          10  BL3:    JP      CMD0
                                
       FA33                     BLERR:
000233 FA33 3EE0             7          LD      A,0E0H          ;AREA OVERエラーを表示
000235 FA35 F5              11          PUSH    AF
000236 FA36 CDB5FF          17          CALL    SNDBYTE
000239 FA39 F1              10          POP     AF
00023A FA3A C328FB          10          JP      ERR
                                
                                ;************* BASIC中からの機械語ロード *****************
                                ;                     CALL &HF803:REM filenameと記述する
       FA3D                     BCALL:
00023D FA3D CD72FB          17          CALL    GETCP
000240 FA40 2AD3FD          16          LD      HL,(WRKCP)      ;現在実行BASICプログラムの注目ポイントを取得
000243 FA43 23               6          INC     HL              ;REM文をスキップ
000244 FA44 23               6          INC     HL
000245 FA45 23               6          INC     HL              ;REM文の後ろに書かれているfilenameの先頭アドレスを取得
000246 FA46 3E17             7          LD      A,17H           ;LOADコマンド17H
000248 FA48 CDD5FD          17          CALL    STCD            ;コマンドコード送信
00024B FA4B A7               4          AND     A               ;00以外ならERROR
00024C FA4C C228FB          10          JP      NZ,ERR
00024F FA4F CDCDFE          17          CALL    STFN            ;SPACE読み飛ばし
000252 FA52 E5              11          PUSH    HL
000253 FA53 CD8AFB          17          CALL    STFS            ;ファイルネーム送信
000256 FA56 E1              10          POP     HL
000257 FA57 A7               4          AND     A               ;00以外ならERROR
000258 FA58 C228FB          10          JP      NZ,ERR
00025B FA5B C3FFFE          10          JP      ML4
                                
                                ;************ SDコマンド(SD DIRECTORY LIST) **********************
       FA5E                     SDIR:
00025E FA5E 23               6          INC     HL
00025F FA5F 7E               7          LD      A,(HL)
000260 FA60 FE0D             7          CP      0DH             ;0DHならファイル名無し
000262 FA62 2803            12          JR      Z,SDIR1
000264 FA64 CDCDFE          17          CALL    STFN            ;SPACE読み飛ばし
       FA67                     SDIR1:
000267 FA67 EB               4          EX      DE,HL
000268 FA68 CD90FA          17          CALL    DIRLIST             ;DIRLIST本体をコール
00026B FA6B 280D            12          JR      Z,SDIR2             ;00ならHLにセットされているファイル名でBS MONITOR LTコマンドを実行
00026D FA6D F5              11          PUSH    AF
00026E FA6E CD99FF          17          CALL    RCVBYTE             ;拡張子判定読み飛ばし
000271 FA71 F1              10          POP     AF
000272 FA72 FE01             7          CP      01H                 ;01なら通常リターン
000274 FA74 C428FB          17          CALL    NZ,ERR              ;00,01以外ならERROR
000277 FA77 C3E5FD          10          JP      CMD0
                                
       FA7A                     SDIR2:
00027A FA7A 2B               6          DEC     HL
00027B FA7B CD99FF          17          CALL    RCVBYTE             ;選択ファイルの拡張子受信:0,BIN 1,BAS 2,FPT 3,その他
00027E FA7E FE00             7          CP      00H
000280 FA80 CA6FFF          10          JP      Z,MLOAD             ;BINならMLOADへ
000283 FA83 FE01             7          CP      01H
000285 FA85 CAAAF9          10          JP      Z,BLOAD             ;BASならBLOADへ
000288 FA88 3EE3             7          LD      A,0E3H
00028A FA8A CD7910          17          CALL    PR2HEX
00028D FA8D C328FB          10          JP      ERR                 ;以外はERROR
                                
                                ;**** DIRLIST本体  ****
                                ;****              戻り値 A=エラーコード ****
       FA90                     DIRLIST:
000290 FA90 3E11             7          LD      A,11H               ;DIRLISTコマンド11Hを送信
000292 FA92 CDD5FD          17          CALL    STCD                ;コマンドコード送信
000295 FA95 A7               4          AND     A                   ;00以外ならERROR
000296 FA96 C227FB          10          JP      NZ,DLRET
                                        
000299 FA99 C5              11          PUSH    BC
00029A FA9A 0621             7          LD      B,21H               ;ファイルネーム検索文字列33文字分を送信
00029C FA9C 1A               7  STLT1:  LD      A,(DE)
00029D FA9D CDB5FF          17          CALL    SNDBYTE             ;ファイルネーム検索文字列を送信
0002A0 FAA0 13               6          INC     DE
0002A1 FAA1 10F9            13  STLT4:  DJNZ    STLT1
0002A3 FAA3 C1              10          POP     BC
0002A4 FAA4 CD99FF          17          CALL    RCVBYTE             ;状態取得(00H=OK)
0002A7 FAA7 A7               4          AND     A                   ;00以外ならERROR
0002A8 FAA8 207D            12          JR      NZ,DLRET
                                
0002AA FAAA 217DFE          10  DL1:    LD      HL,BUFF
0002AD FAAD CD99FF          17  DL2:    CALL    RCVBYTE             ;'00H'を受信するまでを一行とする
0002B0 FAB0 A7               4          AND     A
0002B1 FAB1 2810            12          JR      Z,DL3
0002B3 FAB3 FEFF             7          CP      0FFH                ;'0FFH'を受信したら終了
0002B5 FAB5 2819            12          JR      Z,DL4
0002B7 FAB7 FEFD             7          CP      0FDH                ;'0FDH'受信で選択した文字列をファイルネームとして取得して終了
0002B9 FAB9 281D            12          JR      Z,DL9
0002BB FABB FEFE             7          CP      0FEH                ;'0FEH'を受信したら一時停止して一文字入力待ち
0002BD FABD 283D            12          JR      Z,DL5
0002BF FABF 77               7          LD      (HL),A
0002C0 FAC0 23               6          INC     HL
0002C1 FAC1 18EA            12          JR      DL2
0002C3 FAC3 3600            10  DL3:    LD      (HL),00H
0002C5 FAC5 117DFE          10          LD      DE,BUFF             ;'00H'を受信したら一行分を表示して改行
0002C8 FAC8 CD281D          17          CALL    STRPRN
       FACB                     DL33:
0002CB FACB CD4E37          17          CALL    CRLF                ;改行
0002CE FACE 18DA            12          JR      DL1
       FAD0                     DL4:
0002D0 FAD0 CD99FF          17          CALL    RCVBYTE             ;状態取得(00H=OK)
0002D3 FAD3 3E01             7          LD      A,01H
0002D5 FAD5 A7               4          AND     A                   ;00以外ならERROR
0002D6 FAD6 184F            12          JR      DLRET
                                
0002D8 FAD8 CD4E37          17  DL9:    CALL    CRLF                ;改行
                                        
0002DB FADB 217DFE          10          LD      HL,BUFF             ;選択したファイルネームを再度取得
0002DE FADE CD99FF          17  DL91:   CALL    RCVBYTE
0002E1 FAE1 77               7          LD      (HL),A
0002E2 FAE2 FE00             7          CP      00H
0002E4 FAE4 23               6          INC     HL
0002E5 FAE5 20F7            12          JR      NZ,DL91
                                
0002E7 FAE7 117DFE          10          LD      DE,BUFF             ;取得したファイルネームを表示
0002EA FAEA CD281D          17          CALL    STRPRN
0002ED FAED CD4E37          17          CALL    CRLF
0002F0 FAF0 CD99FF          17          CALL    RCVBYTE             ;状態取得読み飛ばし
0002F3 FAF3 CD99FF          17          CALL    RCVBYTE             ;状態取得(00H=OK)
                                
0002F6 FAF6 217DFE          10          LD      HL,BUFF             ;取得したファイルネーム
0002F9 FAF9 A7               4          AND     A                   ;00以外ならERROR
0002FA FAFA 182B            12          JR      DLRET
                                
       FAFC                     DL5:
0002FC FAFC 11D1FC          10          LD      DE,MSG_KEY1         ;HIT ANT KEY表示
0002FF FAFF CD281D          17          CALL    STRPRN
       FB02                     DL6:
000302 FB02 CDCB10          17          CALL    KINPUT
000305 FB05 FE1B             7          CP      1BH                 ;ESCで打ち切り
000307 FB07 2817            12          JR      Z,DL7
000309 FB09 FE30             7          CP      30H                 ;数字0〜9ならそのままArduinoへ送信してSETL処理へ
00030B FB0B 3804            12          JR      C,DL61
00030D FB0D FE3A             7          CP      3AH
00030F FB0F 3811            12          JR      C,DL8
       FB11                     DL61:
000311 FB11 FE42             7          CP      42H                 ;「B」で前ページ
000313 FB13 280D            12          JR      Z,DL8
000315 FB15 FE08             7          CP      08H
000317 FB17 2004            12          JR      NZ,DL62
000319 FB19 3E42             7          LD      A,42H
00031B FB1B 1805            12          JR      DL8
00031D FB1D AF               4  DL62:   XOR     A                   ;それ以外で継続
00031E FB1E 1802            12          JR      DL8
000320 FB20 3EFF             7  DL7:    LD      A,0FFH              ;0FFH中断コードを送信
000322 FB22 CDB5FF          17  DL8:    CALL    SNDBYTE
000325 FB25 1883            12          JR      DL1
                                        
000327 FB27 C9              10  DLRET:  RET
                                
       FB28                     ERR:
       FB28                     ERR_E0:
000328 FB28 FEE0             7          CP      0E0H
00032A FB2A 2005            12          JR      NZ,ERR_E1
00032C FB2C 112EFD          10          LD      DE,MSG_E0
00032F FB2F 1838            12          JR      ERRMSG
000331 FB31 FEE1             7  ERR_E1: CP      0E1H
000333 FB33 2005            12          JR      NZ,ERR_E2
000335 FB35 114EFD          10          LD      DE,MSG_E1
000338 FB38 182F            12          JR      ERRMSG
00033A FB3A FEE2             7  ERR_E2: CP      0E2H
00033C FB3C 2005            12          JR      NZ,ERR_E3
00033E FB3E 1167FD          10          LD      DE,MSG_E2
000341 FB41 1826            12          JR      ERRMSG
000343 FB43 FEE3             7  ERR_E3: CP      0E3H
000345 FB45 2005            12          JR      NZ,ERR_F1
000347 FB47 117AFD          10          LD      DE,MSG_E3
00034A FB4A 181D            12          JR      ERRMSG
00034C FB4C FEF1             7  ERR_F1: CP      0F1H
00034E FB4E 2005            12          JR      NZ,ERR_F0
000350 FB50 11AEFD          10          LD      DE,MSG_F1
000353 FB53 1814            12          JR      ERRMSG
000355 FB55 FEF0             7  ERR_F0: CP      0F0H
000357 FB57 2005            12          JR      NZ,ERR99
000359 FB59 1194FD          10          LD      DE,MSG_F0
00035C FB5C 180B            12          JR      ERRMSG
00035E FB5E CD7910          17  ERR99:  CALL    PR2HEX
000361 FB61 3E3A             7          LD      A,':'
000363 FB63 CD2237          17          CALL    PRINT
000366 FB66 11C7FD          10          LD      DE,MSG_FF
000369 FB69 CD281D          17  ERRMSG: CALL    STRPRN
00036C FB6C CD4E37          17          CALL    CRLF
00036F FB6F C3E5FD          10          JP      CMD0
                                
                                ;************** 行参照ポインタを取得(BASIC中からの機械語ロード用) *************************
000372 FB72 ED73D1FD        20  GETCP:  LD      (WRKSP),SP
000376 FB76 2AD1FD          16          LD      HL,(WRKSP)
000379 FB79 23               6          INC     HL
00037A FB7A 23               6          INC     HL
00037B FB7B 23               6          INC     HL
00037C FB7C 23               6          INC     HL
00037D FB7D 22D1FD          16          LD      (WRKSP),HL
000380 FB80 7E               7          LD      A,(HL)
000381 FB81 32D3FD          13          LD      (WRKCP),A
000384 FB84 23               6          INC     HL
000385 FB85 7E               7          LD      A,(HL)
000386 FB86 32D4FD          13          LD      (WRKCP+1),A
                                        
000389 FB89 C9              10          RET
                                
                                ;**** ファイルネーム送信(IN:HL ファイルネームの先頭) ******
00038A FB8A 0620             7  STFS:   LD      B,20H
00038C FB8C 7E               7  STFS1:  LD      A,(HL)          ;FNAME送信
00038D FB8D CDB5FF          17          CALL    SNDBYTE
000390 FB90 23               6          INC     HL
000391 FB91 10F9            13          DJNZ    STFS1
000393 FB93 3E0D             7          LD      A,0DH
000395 FB95 CDB5FF          17          CALL    SNDBYTE
000398 FB98 CD99FF          17          CALL    RCVBYTE         ;状態取得(00H=OK)
00039B FB9B C9              10          RET
                                
       FB9C                     MSG_CMD:
00039C FB9C 434F4D4D414E4420            DB      'COMMAND FAILED!',0DH,0AH
            4641494C4544210D    
            0A                  
0003AD FBAD 204C4D207374723A            DB      ' LM str: Load Binary',0DH,0AH
            204C6F6164204269    
            6E6172790D0A        
0003C3 FBC3 204C47207374723A            DB      ' LG str: Load Binary And Exe',0DH,0AH
            204C6F6164204269    
            6E61727920416E64    
            204578650D0A        
0003E1 FBE1 204C42207374723A            DB      ' LB str: Load Basic',0DH,0AH
            204C6F6164204261    
            7369630D0A          
0003F6 FBF6 20534D2078787878            DB      ' SM xxxx,yyyy,zzzz,str: Save Binary',0DH,0AH
            2C797979792C7A7A    
            7A7A2C7374723A20    
            536176652042696E    
            6172790D0A          
00041B FC1B 205342207374723A            DB      ' SB str: Save Basic',0DH,0AH
            2053617665204261    
            7369630D0A          
000430 FC30 205344207374723A            DB      ' SD str: SD Dir',0DH,0AH
            205344204469720D    
            0A                  
000441 FC41 20534C202020203A            DB      ' SL    : SLOT Change',0DH,0AH
            20534C4F54204368    
            616E67650D0A        
000457 FC57 204720782020203A            DB      ' G x   : Exe Program',0DH,0AH
            204578652050726F    
            6772616D0D0A        
00046D FC6D 2051206F7220423A            DB      ' Q or B: Return Basic',0DH,0AH,00H
            2052657475726E20    
            42617369630D0A00    
000485 FC85 42696E617279204C    MSG_ML: DB      'Binary Loading:',00H
            6F6164696E673A00    
000495 FC95 42696E6172792053    MSG_MS: DB      'Binary Saving:',00H
            6176696E673A00      
0004A4 FCA4 4261736963205072    MSG_BL: DB      'Basic Program Loading:',00H
            6F6772616D204C6F    
            6164696E673A00      
0004BB FCBB 4261736963205072    MSG_BS: DB      'Basic Program Saving:',00H
            6F6772616D205361    
            76696E673A00        
       FCD1                     MSG_KEY1:
0004D1 FCD1 53454C3A302D3920            DB      'SEL:0-9 NEXT:ANY BACK:B or BS BREAK:ESC',0DH,0AH,00H
            4E4558543A414E59    
            204241434B3A4220    
            6F72204253204252    
            45414B3A4553430D    
            0A00                
0004FB FCFB 4C4F4144204F6E6C    MSG_EXE:DB      'LOAD Only(0),LOAD And Execute(1)?',0DH,0AH,00H
            792830292C4C4F41    
            4420416E64204578    
            6563757465283129    
            3F0D0A00            
00051F FD1F 534C4F542830292C    MSG_SLT:DB      'SLOT(0),(1)?',0DH,0AH,00H
            2831293F0D0A00      
00052E FD2E 4261736963205072    MSG_E0: DB      'Basic Program Text Erea Over!',0DH,0AH,00H
            6F6772616D205465    
            7874204572656120    
            4F766572210D0A00    
00054E FD4E 4261736963205072    MSG_E1: DB      'Basic Program Nothing!',0DH,0AH,00H
            6F6772616D204E6F    
            7468696E67210D0A    
            00                  
000567 FD67 5361766520417265    MSG_E2: DB      'Save Area Error!',0DH,0AH,00H
            61204572726F7221    
            0D0A00              
00057A FD7A 4E6F74204C6F6164    MSG_E3: DB      'Not Load This EXT File!',0DH,0AH,00H
            2054686973204558    
            542046696C65210D    
            0A00                
000594 FD94 53442D4341524420    MSG_F0: DB      'SD-CARD Initialize Error!',00H
            496E697469616C69    
            7A65204572726F72    
            2100                
0005AE FDAE 4E6F742046696E64    MSG_F1: DB      'Not Find Filename Error!',00H
            2046696C656E616D    
            65204572726F7221    
            00                  
0005C7 FDC7 4572726F7200        MSG_FF: DB      'Error',00H
                                
0005CD FDCD                     WRKST:  DS      2
0005CF FDCF                     WRKNX:  DS      2
0005D1 FDD1                     WRKSP:  DS      2
0005D3 FDD3                     WRKCP:  DS      2
                                
                                ;**** コマンド送信 (IN:A コマンドコード)****
0005D5 FDD5 CDB5FF          17  STCD:   CALL    SNDBYTE         ;Aレジスタのコマンドコードを送信
0005D8 FDD8 CD99FF          17          CALL    RCVBYTE         ;状態取得(00H=OK)
0005DB FDDB C9              10          RET
                                
                                ;******************* ここから以降を上書きしなければLOAD後にGコマンドで実行可能(FDE4)
                                ;******* コマンド入力 *******************:
0005DC FDDC CD72FB          17  ST4:    CALL    GETCP
                                ;       CALL    INIT            ;SLOT0を選択,8255初期化
0005DF FDDF 118BF9          10          LD      DE,TITLE
0005E2 FDE2 CD281D          17          CALL    STRPRN
0005E5 FDE5 CD31FE          17  CMD0:   CALL    LINPUT
0005E8 FDE8 217DFE          10          LD      HL,BUFF
0005EB FDEB 7E               7          LD      A,(HL)
0005EC FDEC 23               6          INC     HL
0005ED FDED FE4C             7          CP      'L'
0005EF FDEF 2012            12          JR      NZ,CMD1
0005F1 FDF1 7E               7          LD      A,(HL)
0005F2 FDF2 FE4D             7          CP      'M'             ;LMコマンド
0005F4 FDF4 CA6FFF          10          JP      Z,MLOAD
0005F7 FDF7 FE42             7          CP      'B'             ;LBコマンド
0005F9 FDF9 CAAAF9          10          JP      Z,BLOAD
0005FC FDFC FE47             7          CP      'G'             ;LGコマンド
0005FE FDFE CA83FF          10          JP      Z,MEXE
000601 FE01 181B            12          JR      CMD9
000603 FE03 FE53             7  CMD1:   CP      'S'
000605 FE05 2017            12          JR      NZ,CMD9
000607 FE07 7E               7          LD      A,(HL)
000608 FE08 FE4D             7          CP      'M'             ;SMコマンド
00060A FE0A CA09F8          10          JP      Z,MSAVE
00060D FE0D FE42             7          CP      'B'             ;SBコマンド
00060F FE0F CA96F8          10          JP      Z,BSAVE
000612 FE12 FE44             7          CP      'D'             ;SDコマンド
000614 FE14 CA5EFA          10          JP      Z,SDIR
000617 FE17 FE4C             7          CP      'L'             ;SLコマンド
000619 FE19 CA24F9          10          JP      Z,SLOT
00061C FE1C 180B            12          JR      CMDERR
00061E FE1E FE51             7  CMD9:   CP      'Q'             ;Qコマンド
000620 FE20 C8              11          RET     Z
000621 FE21 FE42             7          CP      'B'             ;Bコマンド
000623 FE23 C8              11          RET     Z
000624 FE24 FE47             7          CP      'G'             ;Gコマンド
000626 FE26 CAD8FE          10          JP      Z,EXECUTE
000629 FE29 119CFB          10  CMDERR: LD      DE,MSG_CMD      ;コマンドエラーMSG
00062C FE2C CD281D          17          CALL    STRPRN
00062F FE2F 18B4            12          JR      CMD0
                                
                                ;******** 1行入力ルーチン ***********************
                                ;              BS,カーソル右キーによる文字訂正のみ有効
       FE31                     LINPUT:
000631 FE31 117BFE          10          LD      DE,PRMPT
000634 FE34 CD281D          17          CALL    STRPRN
000637 FE37 217DFE          10          LD      HL,BUFF
00063A FE3A CDCB10          17  LI2:    CALL    KINPUT          ;1文字入力
00063D FE3D F5              11          PUSH    AF
00063E FE3E CD2237          17          CALL    PRINT           ;入力文字表示
000641 FE41 F1              10          POP     AF
000642 FE42 FE0D             7          CP      0DH             ;改行なら終了
000644 FE44 2822            12          JR      Z,LEND
000646 FE46 FE1D             7          CP      1DH             ;カーソル左処理
000648 FE48 200D            12          JR      NZ,LI4
00064A FE4A 2B               6  LI3:    DEC     HL
00064B FE4B 3E20             7          LD      A,' '           ;カーソル位置の文字を空白に置き換え
00064D FE4D CD2237          17          CALL    PRINT
000650 FE50 3E1D             7          LD      A,1DH           ;もう一回カーソル左
000652 FE52 CD2237          17          CALL    PRINT
000655 FE55 18E3            12          JR      LI2
000657 FE57 FE08             7  LI4:    CP      08H             ;BS処理
000659 FE59 2002            12          JR      NZ,LI5
00065B FE5B 18ED            12          JR      LI3             ;カーソル左と同様に処理
00065D FE5D FE20             7  LI5:    CP      20H             ;コントロール文字ならBUFFに書き込まない
00065F FE5F 38D9            12          JR      C,LI2
000661 FE61 CD6EFE          17          CALL    LICHK
000664 FE64 77               7          LD      (HL),A
000665 FE65 23               6          INC     HL
000666 FE66 18D2            12          JR      LI2
000668 FE68 AF               4  LEND:   XOR     A               ;0DHを00Hに置き換えて終了
000669 FE69 CD6EFE          17          CALL    LICHK
00066C FE6C 77               7          LD      (HL),A
00066D FE6D C9              10          RET
00066E FE6E EB               4  LICHK:  EX      DE,HL           ;カーソル左、BS処理でBUFF先頭を超えては戻らないようにチェック
00066F FE6F 217DFE          10          LD      HL,BUFF
000672 FE72 ED52            15          SBC     HL,DE
000674 FE74 3803            12          JR      C,LICHK1
000676 FE76 117DFE          10          LD      DE,BUFF
000679 FE79 EB               4  LICHK1: EX      DE,HL
00067A FE7A C9              10          RET
                                
00067B FE7B 3E00                PRMPT:  DB      '>',00H
00067D FE7D                     BUFF:   DS      80
                                
                                ;****** FILE NAMEが取得できるまでスペースを読み飛ばし (IN:HL コマンド文字の次の文字 OUT:HL ファイルネームの先頭)*********
0006CD FECD F5              11  STFN:   PUSH    AF
0006CE FECE 7E               7  STFN1:  LD      A,(HL)
0006CF FECF FE20             7          CP      20H
0006D1 FED1 2003            12          JR      NZ,STFN3
0006D3 FED3 23               6          INC     HL              ;ファイルネームまでスペース読み飛ばし
0006D4 FED4 18F8            12          JR      STFN1
0006D6 FED6 F1              10  STFN3:  POP     AF
0006D7 FED7 C9              10          RET
                                
                                ;*********** Gコマンド(16進数4桁のアドレスへJUMP) ***********************
       FED8                     EXECUTE:
0006D8 FED8 CDCDFE          17          CALL    STFN            ;SPACE読み飛ばし
0006DB FEDB 7E               7          LD      A,(HL)          ;アドレス指定がなかったらWRKEXの示すアドレスで実行
0006DC FEDC A7               4          AND     A
0006DD FEDD 2009            12          JR      NZ,EXE1
0006DF FEDF 3A8EFF          13          LD      A,(WRKEX)
0006E2 FEE2 6F               4          LD      L,A
0006E3 FEE3 3A8FFF          13          LD      A,(WRKEX+1)
0006E6 FEE6 67               4          LD      H,A
0006E7 FEE7 E9               4          JP      (HL)
0006E8 FEE8 EB               4  EXE1:   EX      DE,HL
0006E9 FEE9 CD3B10          17          CALL    STR2HEX         ;HL <- (DE)からの文字列を16進数4桁
0006EC FEEC E9               4          JP      (HL)
                                
                                ;********* 機械語ロード本体 ********************************
       FEED                     ML1:
0006ED FEED 23               6          INC     HL
0006EE FEEE 3E17             7          LD      A,17H           ;LOADコマンド17H
0006F0 FEF0 CDD5FD          17          CALL    STCD            ;コマンドコード送信
0006F3 FEF3 A7               4          AND     A               ;00以外ならERROR
0006F4 FEF4 C0              11          RET     NZ
0006F5 FEF5 CDCDFE          17          CALL    STFN            ;SPACE読み飛ばし
0006F8 FEF8 E5              11          PUSH    HL
0006F9 FEF9 CD8AFB          17          CALL    STFS            ;ファイルネーム送信
0006FC FEFC E1              10          POP     HL
0006FD FEFD A7               4          AND     A               ;00以外ならERROR
0006FE FEFE C0              11          RET     NZ
0006FF FEFF 1185FC          10  ML4:    LD      DE,MSG_ML       ;Loadingメッセージ
000702 FF02 CD281D          17          CALL    STRPRN
000705 FF05 EB               4          EX      DE,HL
000706 FF06 CD281D          17          CALL    STRPRN          ;ファイルネーム表示
000709 FF09 CD4E37          17          CALL    CRLF
                                
00070C FF0C CD99FF          17          CALL    RCVBYTE         ;ファイル長受信
00070F FF0F 5F               4          LD      E,A
000710 FF10 CD99FF          17          CALL    RCVBYTE
000713 FF13 57               4          LD      D,A
                                        
000714 FF14 3E28             7          LD      A,'('
000716 FF16 CD2237          17          CALL    PRINT
000719 FF19 CD99FF          17          CALL    RCVBYTE         ;開始アドレス受信
00071C FF1C 6F               4          LD      L,A
00071D FF1D CD99FF          17          CALL    RCVBYTE
000720 FF20 67               4          LD      H,A
000721 FF21 7C               4          LD      A,H
000722 FF22 CD7910          17          CALL    PR2HEX
000725 FF25 7D               4          LD      A,L
000726 FF26 CD7910          17          CALL    PR2HEX
000729 FF29 E5              11          PUSH    HL
00072A FF2A 19              11          ADD     HL,DE
00072B FF2B 2B               6          DEC     HL
00072C FF2C 3E2C             7          LD      A,','
00072E FF2E CD2237          17          CALL    PRINT
000731 FF31 7C               4          LD      A,H
000732 FF32 CD7910          17          CALL    PR2HEX
000735 FF35 7D               4          LD      A,L
000736 FF36 CD7910          17          CALL    PR2HEX
000739 FF39 E1              10          POP     HL
00073A FF3A 3E2C             7          LD      A,','
00073C FF3C CD2237          17          CALL    PRINT
00073F FF3F CD99FF          17          CALL    RCVBYTE         ;EXECUTEアドレス受信
000742 FF42 328EFF          13          LD      (WRKEX),A
000745 FF45 CD99FF          17          CALL    RCVBYTE
000748 FF48 328FFF          13          LD      (WRKEX+1),A
00074B FF4B CD7910          17          CALL    PR2HEX
00074E FF4E 3A8EFF          13          LD      A,(WRKEX)
000751 FF51 CD7910          17          CALL    PR2HEX
                                
000754 FF54 3E29             7          LD      A,')'
000756 FF56 CD2237          17          CALL    PRINT
000759 FF59 CD4E37          17          CALL    CRLF
                                
                                ;******************* ここから以降を上書きしなければLGコマンドでロード実行可能(FF64)
       FF5C                     ML2:    
00075C FF5C CD99FF          17          CALL    RCVBYTE         ;データ受信
00075F FF5F 77               7          LD      (HL),A
000760 FF60 23               6          INC     HL
000761 FF61 1B               6          DEC     DE
000762 FF62 7B               4          LD      A,E
000763 FF63 CD90FF          17          CALL    PRTDOT
000766 FF66 7B               4          LD      A,E
000767 FF67 B2               4          OR      D
000768 FF68 20F2            12          JR      NZ,ML2          ;ファイル長分をループ
00076A FF6A CD4E37          17          CALL    CRLF
00076D FF6D AF               4          XOR     A
00076E FF6E C9              10          RET
                                
                                ;*********** LMコマンド(機械語プログラムのLOAD) ***********************
       FF6F                     MLOAD:
00076F FF6F CDEDFE          17          CALL    ML1
000772 FF72 A7               4          AND     A
000773 FF73 C228FB          10          JP      NZ,ERR
                                
                                #if SDF8 == 1
000776 FF76 11DCFD          10          LD      DE,ST4          ;SDF8限定:LOAD最終番地(HL)がST4(DE)より大きければ
                                                                ;         CMD0に戻っても無意味なので実行番地から実行
000779 FF79 AF               4          XOR     A
00077A FF7A ED52            15          SBC     HL,DE
00077C FF7C 3802            12          JR      C,ML5
00077E FF7E 180A            12          JR      ML6
                                #endif
000780 FF80 C3E5FD          10  ML5:    JP      CMD0
                                
                                ;********** LGコマンド(機械語プログラムのLOAD、実行番地へのJUMP) ****************
       FF83                     MEXE:
000783 FF83 CDEDFE          17          CALL    ML1
000786 FF86 A7               4          AND     A
000787 FF87 C228FB          10          JP      NZ,ERR
00078A FF8A 2A8EFF          16  ML6:    LD      HL,(WRKEX)
00078D FF8D E9               4          JP      (HL)
                                
00078E FF8E                     WRKEX:  DS      2
                                
                                ;************* SAVE、LOAD 進行状況用DOT表示 **********************
000790 FF90 A7               4  PRTDOT: AND     A
000791 FF91 2005            12          JR      NZ,PD1
000793 FF93 3E2E             7          LD      A,'.'
000795 FF95 CD2237          17          CALL    PRINT
000798 FF98 C9              10  PD1:    RET
                                
                                ;**** 1BYTE受信 ****
                                ;受信DATAをAレジスタにセットしてリターン
       FF99                     RCVBYTE:
000799 FF99 CDECFF          17          CALL    F1CHK           ;PORTC BIT7が1になるまでLOOP
00079C FF9C 0101E0          10          LD      BC,PPI_B
00079F FF9F ED78            12          IN      A,(C)           ;PORTB -> A
0007A1 FFA1 F5              11          PUSH    AF
0007A2 FFA2 3E05             7          LD      A,05H
0007A4 FFA4 0103E0          10          LD      BC,PPI_R
0007A7 FFA7 ED79            12          OUT     (C),A           ;PORTC BIT2 <- 1
0007A9 FFA9 CDE2FF          17          CALL    F2CHK           ;PORTC BIT7が0になるまでLOOP
0007AC FFAC 3E04             7          LD      A,04H
0007AE FFAE 0103E0          10          LD      BC,PPI_R
0007B1 FFB1 ED79            12          OUT     (C),A           ;PORTC BIT2 <- 0
0007B3 FFB3 F1              10          POP     AF
0007B4 FFB4 C9              10          RET
                                
                                ;**** 1BYTE送信 ****
                                ;Aレジスタの内容をPORTA下位4BITに4BITずつ送信
       FFB5                     SNDBYTE:
0007B5 FFB5 C5              11          PUSH    BC
0007B6 FFB6 F5              11          PUSH    AF
0007B7 FFB7 1F               4          RRA
0007B8 FFB8 1F               4          RRA
0007B9 FFB9 1F               4          RRA
0007BA FFBA 1F               4          RRA
0007BB FFBB E60F             7          AND     0FH
0007BD FFBD CDC8FF          17          CALL    SND4BIT
0007C0 FFC0 F1              10          POP     AF
0007C1 FFC1 E60F             7          AND     0FH
0007C3 FFC3 CDC8FF          17          CALL    SND4BIT
0007C6 FFC6 C1              10          POP     BC
0007C7 FFC7 C9              10          RET
                                
                                ;**** 4BIT送信 ****
                                ;Aレジスタ下位4ビットを送信する
       FFC8                     SND4BIT:
0007C8 FFC8 0100E0          10          LD      BC,PPI_A
0007CB FFCB ED79            12          OUT     (C),A
0007CD FFCD 3E05             7          LD      A,05H
0007CF FFCF 0103E0          10          LD      BC,PPI_R
0007D2 FFD2 ED79            12          OUT     (C),A           ;PORTC BIT2 <- 1
0007D4 FFD4 CDECFF          17          CALL    F1CHK           ;PORTC BIT7が1になるまでLOOP
0007D7 FFD7 3E04             7          LD      A,04H
0007D9 FFD9 0103E0          10          LD      BC,PPI_R
0007DC FFDC ED79            12          OUT     (C),A           ;PORTC BIT2 <- 0
0007DE FFDE CDE2FF          17          CALL    F2CHK
0007E1 FFE1 C9              10          RET
                                
                                ;**** BUSYをCHECK(0) ****
                                ; E002H BIT7が0になるまでLOOP
0007E2 FFE2 0102E0          10  F2CHK:  LD      BC,PPI_C
0007E5 FFE5 ED78            12          IN      A,(C)
0007E7 FFE7 E680             7          AND     80H             ;PORTC BIT7 = 0?
0007E9 FFE9 20F7            12          JR      NZ,F2CHK
0007EB FFEB C9              10          RET
                                
                                ;**** BUSYをCHECK(1) ****
                                ; E002H BIT7が1になるまでLOP
0007EC FFEC 0102E0          10  F1CHK:  LD      BC,PPI_C
0007EF FFEF ED78            12          IN      A,(C)
0007F1 FFF1 E680             7          AND     80H             ;PORTC BIT7 = 1?
0007F3 FFF3 28F7            12          JR      Z,F1CHK
0007F5 FFF5 C9              10          RET
                                
                                        END
[EOF:BOOT.S:SHIFT_JIS]
